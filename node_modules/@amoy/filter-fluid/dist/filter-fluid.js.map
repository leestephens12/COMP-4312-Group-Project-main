{"version":3,"file":"filter-fluid.js","sources":["../src/FluidFilter.js"],"sourcesContent":["\nimport {Filter} from '@pixi/core';\nimport { settings } from '@pixi/settings';\n/**\n * The NTFluidFilter applies a Fluid effect to an object.<br>\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-fluid}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [strength=15] - the strength of blur\n */\nclass AmoyFluidFilter extends Filter {\n\n    constructor(strength) {\n        super();\n        this._blurFilter = new PIXI.filters.BlurFilter(strength || 15);\n        this._colFilter = new PIXI.filters.ColorMatrixFilter();\n\n        //use this matrix to change alpha value\n        this._colFilter.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 100, -12];\n        this.resolution = settings.RESOLUTION;\n\n        this.padding = Math.abs(this._blurFilter.blur) * 2;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        let renderTarget = filterManager.getFilterTexture();\n        let renderTarget1 = filterManager.getFilterTexture();\n\n        this._blurFilter.apply(filterManager, input, renderTarget, true);\n        this._colFilter.apply(filterManager, renderTarget, renderTarget1, true);\n\n        filterManager.applyFilter(this, renderTarget1, output, clear);\n\n        filterManager.returnFilterTexture(renderTarget1);\n        filterManager.returnFilterTexture(renderTarget);\n    }\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    get resolution() {\n        return this._resolution;\n    }\n\n    set resolution(value) {\n        this._resolution = value;\n\n        if (this._colFilter) {\n            this._colFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    }\n\n}\n\n\n\nexport { AmoyFluidFilter };\n"],"names":["AmoyFluidFilter","strength","super","this","_blurFilter","PIXI","filters","BlurFilter","_colFilter","ColorMatrixFilter","matrix","resolution","settings","RESOLUTION","padding","Math","abs","blur","apply","filterManager","input","output","clear","let","renderTarget","getFilterTexture","renderTarget1","applyFilter","returnFilterTexture","prototypeAccessors","_resolution","value","Filter"],"mappings":";;;;;;;+CAYMA,cAEF,WAAYC,GACRC,aACAC,KAAKC,YAAc,IAAIC,KAAKC,QAAQC,WAAWN,GAAY,IAC3DE,KAAKK,WAAa,IAAIH,KAAKC,QAAQG,kBAGnCN,KAAKK,WAAWE,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAM,IACtFP,KAAKQ,WAAaC,WAASC,WAE3BV,KAAKW,QAA4C,EAAlCC,KAAKC,IAAIb,KAAKC,YAAYa,qJAO7CC,eAAMC,EAAeC,EAAOC,EAAQC,GAChCC,IAAIC,EAAeL,EAAcM,mBAC7BC,EAAgBP,EAAcM,mBAElCtB,KAAKC,YAAYc,MAAMC,EAAeC,EAAOI,GAAc,GAC3DrB,KAAKK,WAAWU,MAAMC,EAAeK,EAAcE,GAAe,GAElEP,EAAcQ,YAAYxB,KAAMuB,EAAeL,EAAQC,GAEvDH,EAAcS,oBAAoBF,GAClCP,EAAcS,oBAAoBJ,IAQtCK,EAAIlB,0BACA,OAAOR,KAAK2B,aAGhBD,EAAIlB,wBAAWoB,GACX5B,KAAK2B,YAAcC,EAEf5B,KAAKK,aACLL,KAAKK,WAAWG,WAAaoB,GAE7B5B,KAAKC,cACLD,KAAKC,YAAYO,WAAaoB,8CA/CZC"}