/*!
 * @amoy/filter-clear-background - v3.0.28
 * Compiled Tue, 03 Dec 2019 15:39:17 UTC
 *
 * @amoy/filter-clear-background is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(r,n){"use strict";var o="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",t="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nuniform vec3 uColor;\nuniform float uOffset;\n\n\nvec3 rgb2hsl(vec3 rgb)\n{\n    float h;\n    float s;\n    float l;\n\n    float maxval = max(rgb.r , max(rgb.g, rgb.b));\n    float minval = min(rgb.r, min(rgb.g, rgb.b));\n    float delta = maxval - minval;\n \n    l = (minval + maxval) / 2.0;\n    s = 0.0;\n    if (l > 0.0 && l < 1.0)\n        s = delta / (l < 0.5 ? 2.0 * l : 2.0 - 2.0 * l);\n    h = 0.0;\n    if (delta > 0.0)\n    {\n        if (rgb.r == maxval && rgb.g != maxval)\n            h += (rgb.g - rgb.b ) / delta;\n        if (rgb.g == maxval && rgb.b != maxval)\n            h += 2.0  + (rgb.b - rgb.r) / delta;\n        if (rgb.b == maxval && rgb.r != maxval)\n            h += 4.0 + (rgb.r - rgb.g) / delta;\n        h *= 60.0;\n    }\n\n    return vec3(h,s,l);\n}\n\n\nvoid main( )\n{\n    vec2 uv = vTextureCoord;\n    vec4 c = texture2D(uSampler, vTextureCoord);\n\n    vec3 hsl;\n    hsl = rgb2hsl(c.rgb);\n\n    vec3 hsl1;\n    hsl1 = rgb2hsl(uColor);\n\n    float a = 1.;\n    if(abs(hsl.x - hsl1.x) < uOffset &&(abs(hsl.y - hsl1.y) < uOffset) && (abs(hsl.z - hsl1.z) < uOffset)){\n        a = 0.0;\n    }\n\n    c *= a;\n    gl_FragColor = c;\n}",e=function(r){function n(n,e){void 0===n&&(n={r:1,g:0,b:0}),void 0===e&&(e=5),r.call(this,o,t),this.uniforms.uColor=new Float32Array(3),this.offset=e,this._color={r:n.r,g:n.g,b:n.b}}r&&(n.__proto__=r),n.prototype=Object.create(r&&r.prototype),n.prototype.constructor=n;var e={color:{configurable:!0},offset:{configurable:!0}};return n.prototype.apply=function(r,n,o,t){this.uniforms.uColor[0]=this._color.r,this.uniforms.uColor[1]=this._color.g,this.uniforms.uColor[2]=this._color.b,this.uniforms.uOffset=this.offset,r.applyFilter(this,n,o,t)},e.color.get=function(){return this._color},e.color.set=function(r){this._color=r,this.uniforms.uColor[0]=r.r,this.uniforms.uColor[1]=r.g,this.uniforms.uColor[2]=r.b},e.offset.get=function(){return this.uniforms.uOffset},e.offset.set=function(r){this.uniforms.uOffset=r},Object.defineProperties(n.prototype,e),n}(n.Filter);return r.AmoyClearBackgroundFilter=e,r}({},PIXI);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-clear-background.js.map
