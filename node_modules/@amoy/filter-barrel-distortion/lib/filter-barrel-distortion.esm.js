/*!
 * @amoy/filter-barrel-distortion - v3.0.24
 * Compiled Wed, 27 Nov 2019 03:13:09 UTC
 *
 * @amoy/filter-barrel-distortion is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter } from '@pixi/core';

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader\n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nuniform float uBarrelPower;\n\nvec2 Distort(vec2 p)\n{\n    float theta=atan(p.y,p.x);\n    float radius=length(p);\n    radius=pow(radius,uBarrelPower);\n    p.x=radius*cos(theta);\n    p.y=radius*sin(theta);\n    return .5*(p+1.);\n}\n\nvoid main()\n{\n    vec2 xy=2.*vTextureCoord.xy-1.;\n    vec2 uv;\n    float d=length(xy);\n    if(d<1.)\n    {\n        uv=Distort(xy);\n    }\n    else\n    {\n        uv=vTextureCoord.xy;\n    }\n    vec4 c=texture2D(uSampler,uv);\n    gl_FragColor=c;\n}";

/**
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-barreldistortion}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 */

var AmoyBarrelDistortionFilter = /*@__PURE__*/(function (Filter) {
    function AmoyBarrelDistortionFilter(barrelPower) {
        if ( barrelPower === void 0 ) barrelPower=2.0;

        Filter.call(this, vertex, fragment);
        this.barrelPower = barrelPower;
    }

    if ( Filter ) AmoyBarrelDistortionFilter.__proto__ = Filter;
    AmoyBarrelDistortionFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyBarrelDistortionFilter.prototype.constructor = AmoyBarrelDistortionFilter;

    var prototypeAccessors = { barrelPower: { configurable: true } };

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyBarrelDistortionFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        this.uniforms.uBarrelPower = this.barrelPower;
        filterManager.applyFilter(this, input, output, clear);
    };

    /**
     * barrelPower , the strength of distortion
     * @member {number}
     */
    prototypeAccessors.barrelPower.get = function () {
        return this.uniforms.uBarrelPower;
    };

    prototypeAccessors.barrelPower.set = function (value) {
        this.uniforms.uBarrelPower = value;
    };

    Object.defineProperties( AmoyBarrelDistortionFilter.prototype, prototypeAccessors );

    return AmoyBarrelDistortionFilter;
}(Filter));

export { AmoyBarrelDistortionFilter };
//# sourceMappingURL=filter-barrel-distortion.esm.js.map
