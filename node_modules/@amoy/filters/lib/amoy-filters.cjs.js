/*!
 * @amoy/filters - v3.0.30
 * Compiled Wed, 04 Dec 2019 07:31:38 UTC
 *
 * @amoy/filters is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('util');
var filterRainfall = require('@amoy/filter-rainfall');
var filterMosaic = require('@amoy/filter-mosaic');
var filterPixelVibration = require('@amoy/filter-pixel-vibration');
var filterLight2d = require('@amoy/filter-light2d');
var filterLensHalo = require('@amoy/filter-lens-halo');
var filterBrokenCamDistortion = require('@amoy/filter-broken-cam-distortion');
var filterPageCurl = require('@amoy/filter-page-curl');
var filterSparksDrifting = require('@amoy/filter-sparks-drifting');
var filterWhiteBlackSketch = require('@amoy/filter-white-black-sketch');
var filterVcr = require('@amoy/filter-vcr');
var filterFlame = require('@amoy/filter-flame');
var filterGameboyStyle = require('@amoy/filter-gameboy-style');
var filterSnow = require('@amoy/filter-snow');
var filterLightSweep = require('@amoy/filter-light-sweep');
var filterReflection = require('@amoy/filter-reflection');
var filterWaterReflection = require('@amoy/filter-water-reflection');
var filterWeatherRainy = require('@amoy/filter-weather-rainy');
var filterWeatherCloud = require('@amoy/filter-weather-cloud');
var filterInnerOutline = require('@amoy/filter-inner-outline');
var filterFluid = require('@amoy/filter-fluid');
var filterBloodSplash = require('@amoy/filter-blood-splash');
var filterMagnify = require('@amoy/filter-magnify');
var filterFisheye = require('@amoy/filter-fisheye');
var filterBarrelDistortion = require('@amoy/filter-barrel-distortion');
var filterClearBackground = require('@amoy/filter-clear-background');
var filterPencilDraw = require('@amoy/filter-pencil-draw');
var filterPhotoSepiaToning = require('@amoy/filter-photo-sepia-toning');
var filterWarhol = require('@amoy/filter-warhol');
var filterVignette = require('@amoy/filter-vignette');
var filterColorblind = require('@amoy/filter-colorblind');



Object.keys(filterRainfall).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterRainfall[k];
		}
	});
});
Object.keys(filterMosaic).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterMosaic[k];
		}
	});
});
Object.keys(filterPixelVibration).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterPixelVibration[k];
		}
	});
});
Object.keys(filterLight2d).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterLight2d[k];
		}
	});
});
Object.keys(filterLensHalo).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterLensHalo[k];
		}
	});
});
Object.keys(filterBrokenCamDistortion).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterBrokenCamDistortion[k];
		}
	});
});
Object.keys(filterPageCurl).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterPageCurl[k];
		}
	});
});
Object.keys(filterSparksDrifting).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterSparksDrifting[k];
		}
	});
});
Object.keys(filterWhiteBlackSketch).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterWhiteBlackSketch[k];
		}
	});
});
Object.keys(filterVcr).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterVcr[k];
		}
	});
});
Object.keys(filterFlame).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterFlame[k];
		}
	});
});
Object.keys(filterGameboyStyle).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterGameboyStyle[k];
		}
	});
});
Object.keys(filterSnow).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterSnow[k];
		}
	});
});
Object.keys(filterLightSweep).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterLightSweep[k];
		}
	});
});
Object.keys(filterReflection).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterReflection[k];
		}
	});
});
Object.keys(filterWaterReflection).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterWaterReflection[k];
		}
	});
});
Object.keys(filterWeatherRainy).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterWeatherRainy[k];
		}
	});
});
Object.keys(filterWeatherCloud).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterWeatherCloud[k];
		}
	});
});
Object.keys(filterInnerOutline).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterInnerOutline[k];
		}
	});
});
Object.keys(filterFluid).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterFluid[k];
		}
	});
});
Object.keys(filterBloodSplash).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterBloodSplash[k];
		}
	});
});
Object.keys(filterMagnify).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterMagnify[k];
		}
	});
});
Object.keys(filterFisheye).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterFisheye[k];
		}
	});
});
Object.keys(filterBarrelDistortion).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterBarrelDistortion[k];
		}
	});
});
Object.keys(filterClearBackground).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterClearBackground[k];
		}
	});
});
Object.keys(filterPencilDraw).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterPencilDraw[k];
		}
	});
});
Object.keys(filterPhotoSepiaToning).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterPhotoSepiaToning[k];
		}
	});
});
Object.keys(filterWarhol).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterWarhol[k];
		}
	});
});
Object.keys(filterVignette).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterVignette[k];
		}
	});
});
Object.keys(filterColorblind).forEach(function (k) {
	if (k !== 'default') Object.defineProperty(exports, k, {
		enumerable: true,
		get: function () {
			return filterColorblind[k];
		}
	});
});
//# sourceMappingURL=amoy-filters.cjs.js.map
