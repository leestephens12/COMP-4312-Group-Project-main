{"version":3,"file":"amoy-filters.js","sources":["../../filters/rainfall/lib/filter-rainfall.esm.js","../../filters/mosaic/lib/filter-mosaic.esm.js","../../filters/pixel-vibration/lib/filter-pixel-vibration.esm.js","../../filters/light2d/lib/filter-light2d.esm.js","../../filters/lens-halo/lib/filter-lens-halo.esm.js","../../filters/broken-cam-distortion/lib/filter-broken-cam-distortion.esm.js","../../filters/page-curl/lib/filter-page-curl.esm.js","../../filters/sparks-drfting/lib/filter-sparks-drifting.esm.js","../../filters/white-black-sketch/lib/filter-white-black-sketch.esm.js","../../filters/vcr/lib/filter-vcr.esm.js","../../filters/flame/lib/filter-flame.esm.js","../../filters/gameboy-style/lib/filter-gameboy-style.esm.js","../../filters/snow/lib/filter-snow.esm.js","../../filters/light-sweep/lib/filter-light-sweep.esm.js","../../filters/reflection/lib/filter-reflection.esm.js","../../filters/water-reflection/lib/filter-water-reflection.esm.js","../../filters/weather-rainy/lib/filter-weather-rainy.esm.js","../../filters/weather-cloud/lib/filter-weather-cloud.esm.js","../../filters/inner-outline/lib/filter-inner-outline.esm.js","../../filters/fluid/lib/filter-fluid.esm.js","../../filters/blood-splash/lib/filter-blood-splash.esm.js","../../filters/magnify/lib/filter-magnify.esm.js","../../filters/fisheye/lib/filter-fisheye.esm.js","../../filters/barrel-distortion/lib/filter-barrel-distortion.esm.js","../../filters/clear-backgroud/lib/filter-clear-background.esm.js","../../filters/pencil-draw/lib/filter-pencil-draw.esm.js","../../filters/photo-sepia-toning/lib/filter-photo-sepia-toning.esm.js","../../filters/photo-warhol/lib/filter-warhol.esm.js","../../filters/photo-vignette/lib/filter-vignette.esm.js","../../filters/photo-colorblind/lib/filter-colorblind.esm.js"],"sourcesContent":["/*!\n * @amoy/filter-rainfall - v3.0.25\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-rainfall is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\nuniform sampler2D uSampler; // 2d texture\\n\\nuniform vec4 filterArea;\\n//uniform vec2 dimensions;\\n\\nuniform float uTime;\\nuniform float uRainR; // Radius of the rain\\n\\n// Maximum number of cells a ripple can cross.\\n#define MAX_RADIUS 2\\n\\n// Set to 1 to hash twice. Slower, but less patterns.\\n#define DOUBLE_HASH 0\\n\\n// Hash functions shamefully stolen from:\\n// https://www.shadertoy.com/view/4djSRW\\n#define HASHSCALE1 .1031\\n#define HASHSCALE3 vec3(.1031, .1030, .0973)\\n\\nfloat hash12(vec2 p)\\n{\\n\\tvec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n    p3 += dot(p3, p3.yzx + 19.19);\\n    return fract((p3.x + p3.y) * p3.z);\\n}\\n\\nvec2 hash22(vec2 p)\\n{\\n\\tvec3 p3 = fract(vec3(p.xyx) * HASHSCALE3);\\n    p3 += dot(p3, p3.yzx+19.19);\\n    return fract((p3.xx+p3.yz)*p3.zy);\\n\\n}\\n\\nvec4 image()\\n{\\n\\n\\tvec2 uv1 = (vTextureCoord * filterArea.xy) / filterArea.y * uRainR;\\n    \\n    vec2 p0 = floor(uv1);\\n\\n    vec2 circles = vec2(0.);\\n    for (int j = -MAX_RADIUS; j <= MAX_RADIUS; ++j)\\n    {\\n        for (int i = -MAX_RADIUS; i <= MAX_RADIUS; ++i)\\n        {\\n\\t\\t\\tvec2 pi = p0 + vec2(i, j);\\n            #if DOUBLE_HASH\\n            vec2 hsh = hash22(pi);\\n            #else\\n            vec2 hsh = pi;\\n            #endif\\n            vec2 p = pi + hash22(hsh);\\n\\n            float t = fract(0.3*uTime + hash12(hsh));\\n            vec2 v = p - uv1;\\n            float d = length(v) - (float(MAX_RADIUS) + 1.)*t;\\n\\n            float h = 1e-3;\\n            float d1 = d - h;\\n            float d2 = d + h;\\n            float p1 = sin(31.*d1) * smoothstep(-0.6, -0.3, d1) * smoothstep(0., -0.3, d1);\\n            float p2 = sin(31.*d2) * smoothstep(-0.6, -0.3, d2) * smoothstep(0., -0.3, d2);\\n            circles += 0.5 * normalize(v) * ((p2 - p1) / (2. * h) * (1. - t) * (1. - t));\\n        }\\n    }\\n    int r = (MAX_RADIUS*2+1);\\n    circles /= float(r*r);\\n\\n    float intensity = mix(0.01, 0.15, smoothstep(0.1, 0.6, abs(fract(0.05*uTime + 0.5)*2.-1.)));\\n    vec3 n = vec3(circles, sqrt(1. - dot(circles, circles)));\\n\\n    vec3 color = texture2D(uSampler, vTextureCoord).rgb + 5.*pow(clamp(dot(n, normalize(vec3(1., 0.7, 0.5))), 0., 1.), 6.);\\n\\n\\treturn vec4(color, 1.0);\\n}\\n\\n\\nvoid main(void)\\n{\\n    gl_FragColor = image();\\n}\";\n\n/**\n * The AmoyRainfallFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyRainfallFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-rainfall}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [rainR=2.0] rain numbers\n * @param {number} {delta=0} time for shader animation\n */\n\nvar AmoyRainfallFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyRainfallFilter(rainR, delta){\n        if ( rainR === void 0 ) rainR = 2.0;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        this.rainR = rainR;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyRainfallFilter.__proto__ = Filter;\n    AmoyRainfallFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyRainfallFilter.prototype.constructor = AmoyRainfallFilter;\n\n    var prototypeAccessors = { rainR: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyRainfallFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uRainR = this.rainR <= 0 ? 2.0 : this.rainR;\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * rain radias size\n     *\n     * @member {number}\n     * @default 2.0\n     */\n    prototypeAccessors.rainR.get = function () {\n        return this.uniforms.uRainR;\n    };\n\n    prototypeAccessors.rainR.set = function (value) {\n        this.uniforms.uRainR = value;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyRainfallFilter.prototype, prototypeAccessors );\n\n    return AmoyRainfallFilter;\n}(Filter));\n\nexport { AmoyRainfallFilter };\n//# sourceMappingURL=filter-rainfall.esm.js.map\n","/*!\n * @amoy/filter-mosaic - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-mosaic is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\nuniform float uTileSize;\\n\\nvoid main(void)\\n{\\n    \\n    vec2 uv=vTextureCoord;\\n    if(filterArea.y<filterArea.x){\\n        uv.y*=filterArea.y/filterArea.x;\\n    }else{\\n        uv.x*=filterArea.x/filterArea.y;\\n    }\\n    \\n    uv=uv*uTileSize;\\n    \\n    uv=floor(uv);\\n    \\n    uv=uv/uTileSize;\\n    \\n    vec4 tex=texture2D(uSampler,uv);\\n    \\n    gl_FragColor=tex;\\n}\\n\";\n\n/**\n * The NTMosaicFilter applies a mosaic effect to an object.<br>\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-mosaic}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [tileSize=32] - The maximum size of the tilesize is 64\n */\nvar AmoyMosaicFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyMosaicFilter(tileSize) {\n        if ( tileSize === void 0 ) tileSize = 32.0;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.tileSize = tileSize;\n    }\n\n    if ( Filter ) AmoyMosaicFilter.__proto__ = Filter;\n    AmoyMosaicFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyMosaicFilter.prototype.constructor = AmoyMosaicFilter;\n\n    var prototypeAccessors = { tileSize: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyMosaicFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTileSize = this.tileSize <= 0 ? 32.0 : this.tileSize;\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * mosaic tile size\n     *\n     * @member {number}\n     * @default 32.0\n     */\n    prototypeAccessors.tileSize.get = function () {\n        return this.uniforms.uTileSize;\n    };\n\n    prototypeAccessors.tileSize.set = function (value) {\n        if (value < 0.0 || value > 64.0) {\n            value = 32.0;\n        }\n        this.uniforms.uTileSize = value;\n    };\n\n    Object.defineProperties( AmoyMosaicFilter.prototype, prototypeAccessors );\n\n    return AmoyMosaicFilter;\n}(Filter));\n\nexport { AmoyMosaicFilter };\n//# sourceMappingURL=filter-mosaic.esm.js.map\n","/*!\n * @amoy/filter-pixel-vibration - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-pixel-vibration is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar testVert = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar testFrag = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\n\\nuniform sampler2D uSampler; // 2d texture\\n\\nuniform float uIntensity;\\nuniform float uBlursize;\\nuniform float uThreshold;\\n\\n#define T(t, c, u, v, m) texture2D(t, c + vec2(u, v), m)\\n\\nvec4 B(in vec2 C, in sampler2D X, in float m)\\n{\\n\\tvec2 d = m / filterArea.xy;\\n    \\n    vec4  c = texture2D(X, C, m);\\n    c += T(X, C,  d.x, 0.0, m);    \\t\\n    c += T(X, C, -d.x, 0.0, m);    \\t\\n    c += T(X, C, 0.0,  d.y, m);    \\t\\n    c += T(X, C, 0.0, -d.y, m);    \\t\\n    c += T(X, C,  d.x, d.y, m);    \\t\\n    c += T(X, C, -d.x, d.y, m);    \\t\\n    c += T(X, C,  d.x,-d.y, m);    \\t\\n    c += T(X, C, -d.x,-d.y, m);    \\n    return c / 9.0;\\n}\\n\\nint modi(int x, int y) {\\n    return x - y * (x / y);\\n}\\n\\nint and(int a, int b) {\\n    int result = 0;\\n    int n = 1;\\n\\tconst int BIT_COUNT = 32;\\n\\n    for(int i = 0; i < BIT_COUNT; i++) {\\n        if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\\n            result += n;\\n        }\\n\\n        a = a / 2;\\n        b = b / 2;\\n        n = n * 2;\\n\\n        if (!(a > 0 && b > 0))\\n            break;\\n    }\\n    return result;\\n}\\n\\nvec4 vibrance(vec4 inCol, float vibrance) //r,g,b 0.0 to 1.0,  vibrance 1.0 no change, 0.0 image B&W.\\n{\\n    vec4 outCol;\\n    if (vibrance <= 1.0)\\n    {\\n        float avg = dot(inCol.rgb, vec3(0.3, 0.6, 0.1));\\n        outCol.rgb = mix(vec3(avg), inCol.rgb, vibrance); \\n    }\\n    else // vibrance > 1.0\\n    {\\n        float hue_a, a, f, p1, p2, p3, i, h, s, v, amt, _max, _min, dlt;\\n        float br1, br2, br3, br4, br5, br2_or_br1, br3_or_br1, br4_or_br1, br5_or_br1;\\n        int use;\\n\\n        _min = min(min(inCol.r, inCol.g), inCol.b);\\n        _max = max(max(inCol.r, inCol.g), inCol.b);\\n        dlt = _max - _min + 0.00001 /*Hack to fix divide zero infinities*/;\\n        h = 0.0;\\n        v = _max;\\n\\n\\t\\tbr1 = step(_max, 0.0);\\n        s = (dlt / _max) * (1.0 - br1);\\n        h = -1.0 * br1;\\n\\n\\t\\tbr2 = 1.0 - step(_max - inCol.r, 0.0); \\n        br2_or_br1 = max(br2, br1);\\n        h = ((inCol.g - inCol.b) / dlt) * (1.0 - br2_or_br1) + (h*br2_or_br1);\\n\\n\\t\\tbr3 = 1.0 - step(_max - inCol.g, 0.0); \\n        \\n        br3_or_br1 = max(br3, br1);\\n        h = (2.0 + (inCol.b - inCol.r) / dlt) * (1.0 - br3_or_br1) + (h*br3_or_br1);\\n\\n        br4 = 1.0 - br2*br3;\\n        br4_or_br1 = max(br4, br1);\\n        h = (4.0 + (inCol.r - inCol.g) / dlt) * (1.0 - br4_or_br1) + (h*br4_or_br1);\\n\\n        h = h*(1.0 - br1);\\n\\n        hue_a = abs(h); // between h of -1 and 1 are skin tones\\n        a = dlt;      // Reducing enhancements on small rgb differences\\n\\n        // Reduce the enhancements on skin tones.    \\n        a = step(1.0, hue_a) * a * (hue_a * 0.67 + 0.33) + step(hue_a, 1.0) * a;                                    \\n        a *= (vibrance - 1.0);\\n        s = (1.0 - a) * s + a * pow(s, 0.25);\\n\\n        i = floor(h);\\n        f = h - i;\\n\\n        p1 = v * (1.0 - s);\\n        p2 = v * (1.0 - (s * f));\\n        p3 = v * (1.0 - (s * (1.0 - f)));\\n\\n        inCol.rgb = vec3(0.0); \\n        i += 6.0;\\n        //use = 1 << ((int)i % 6);\\n        use = int(pow(2.0,mod(i,6.0)));\\n        a = float(and(use , 1)); // i == 0;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(v, p3, p1);\\n\\n        a = float(and(use , 1)); // i == 1;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(p2, v, p1); \\n\\n        a = float( and(use,1)); // i == 2;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(p1, v, p3);\\n\\n        a = float(and(use, 1)); // i == 3;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(p1, p2, v);\\n\\n        a = float(and(use, 1)); // i == 4;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(p3, p1, v);\\n\\n        a = float(and(use, 1)); // i == 5;\\n        use = use / 2;\\n        inCol.rgb += a * vec3(v, p1, p2);\\n\\n        outCol = inCol;\\n    }\\n    return outCol;\\n}\\n\\nvec4 mainImage()\\n{\\n    float t = uThreshold, // threshold\\n\\t \\t  I = uIntensity, // intensity\\n          b = uBlursize; // blursize\\n\\n    vec4 c = texture2D(uSampler, vTextureCoord);//采样\\n    vec4 H = clamp(B(vTextureCoord, uSampler, b) - t, 0.0, 1.0) * 1.0 / (1.0 - t); // highlight\\n    vec4 imgC = 1.0 - (1.0 - c) * (1.0 - H * I); //Screen Blend Mode\\n    \\n    imgC = vibrance(imgC, 2.0);\\n    return imgC;\\n}\\n\\nvoid main(void)\\n{ \\n    gl_FragColor = mainImage();\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-pixel-vibration}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [intensity = 3.0] blur strength\n * @param {number} [blursize = 2.0] blur size\n */\n\nvar AmoyPixelVibrationFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyPixelVibrationFilter(intensity, blursize){\n        if ( intensity === void 0 ) intensity = 3.0;\n        if ( blursize === void 0 ) blursize = 2.0;\n\n        Filter.call(this, testVert, testFrag);\n        this.intensity = intensity;\n        this.blursize = blursize;\n        this.threshold = 0.5;\n    }\n\n    if ( Filter ) AmoyPixelVibrationFilter.__proto__ = Filter;\n    AmoyPixelVibrationFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyPixelVibrationFilter.prototype.constructor = AmoyPixelVibrationFilter;\n\n    var prototypeAccessors = { intensity: { configurable: true },blursize: { configurable: true },threshold: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyPixelVibrationFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uIntensity = this.intensity <= 0 ? 3.0 : this.intensity;\n        this.uniforms.uBlursize = this.blursize <= 0 ? 2.0 : this.blursize;\n        this.uniforms.uThreshold = this.threshold <= 0 ? 0.0 : this.threshold;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * intensity\n     *\n     * @member {number}\n     * @default 3.0\n     */\n    prototypeAccessors.intensity.get = function () {\n        return this.uniforms.uIntensity;\n    };\n\n    prototypeAccessors.intensity.set = function (value) {\n        this.uniforms.uIntensity = Math.min(Math.max(2.0, value), 6.0);\n    };\n\n    /**\n     * blursize\n     *\n     * @member {number}\n     * @default 2.0\n     */\n    prototypeAccessors.blursize.get = function () {\n        return this.uniforms.uBlursize;\n    };\n\n    prototypeAccessors.blursize.set = function (value) {\n        this.uniforms.uBlursize = Math.min(Math.max(2.0, value), 6.0);\n    };\n\n    /**\n     * threshold\n     *\n     * @member {number}\n     * @default 2.0\n     */\n    prototypeAccessors.threshold.get = function () {\n        return this.uniforms.uThreshold;\n    };\n\n    prototypeAccessors.threshold.set = function (value) {\n        this.uniforms.uThreshold = Math.min(Math.max(0.0, value), 1.0);\n    };\n\n    Object.defineProperties( AmoyPixelVibrationFilter.prototype, prototypeAccessors );\n\n    return AmoyPixelVibrationFilter;\n}(Filter));\n\nexport { AmoyPixelVibrationFilter };\n//# sourceMappingURL=filter-pixel-vibration.esm.js.map\n","/*!\n * @amoy/filter-light2d - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-light2d is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nuniform float uPosx;\\nuniform float uPosy;\\n\\nvoid main(void)\\n{\\nvec2 uv=vTextureCoord;\\n\\nvec3 col=texture2D(uSampler,uv).xyz;\\n\\nvec2 fragCoord=vTextureCoord*filterArea.xy;\\n\\nfloat lightY=0.1*filterArea.y;\\n\\nvec3 lightPos=vec3(uPosx,lightY,uPosy);\\n\\nvec3 lightDir=lightPos-vec3(fragCoord.x,0.,fragCoord.y);\\n\\nfloat diffuse=max(dot(normalize(lightDir),vec3(0.,1.,0.)),0.);\\n\\ngl_FragColor=vec4(col,1.)*diffuse;\\n\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-light2d}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n */\n\nvar AmoyLight2dFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyLight2dFilter(posx, posy) {\n        if ( posx === void 0 ) posx = 10.0;\n        if ( posy === void 0 ) posy = 10.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n\n    }\n\n    if ( Filter ) AmoyLight2dFilter.__proto__ = Filter;\n    AmoyLight2dFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyLight2dFilter.prototype.constructor = AmoyLight2dFilter;\n\n    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyLight2dFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * filter area point x\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     * filter area point y\n     */\n    prototypeAccessors.posy.get = function () {\n        return this.uniforms.uPosy;\n    };\n\n    prototypeAccessors.posy.set = function (value) {\n        this.uniforms.uPosy = value;\n    };\n\n    Object.defineProperties( AmoyLight2dFilter.prototype, prototypeAccessors );\n\n    return AmoyLight2dFilter;\n}(Filter));\n\nexport { AmoyLight2dFilter };\n//# sourceMappingURL=filter-light2d.esm.js.map\n","/*!\n * @amoy/filter-lens-halo - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-lens-halo is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uTime;\\n\\nfloat noise(float t)\\n{\\n\\treturn texture2D(uSampler,vec2(t,0.)/filterArea.xy).x;\\n}\\n\\nfloat noise(vec2 t)\\n{\\n\\treturn texture2D(uSampler,(t+vec2(uTime))/filterArea.xy).x;\\n}\\n\\nvec3 lenshalo(vec2 uv,vec2 pos)\\n{\\n\\tvec2 m=uv-pos;\\n\\tvec2 uvd=uv*(length(uv));\\n\\t\\n\\tfloat ang=atan(m.y,m.x);\\n\\tfloat dist=length(m);dist=pow(dist,.1);\\n\\tfloat n=noise(vec2((ang-uTime/9.)*16.,dist*32.));\\n\\t\\n\\tfloat f0=1./(length(uv-pos)*16.+1.);\\n\\t\\n\\tf0=f0+f0*(sin((ang+uTime/18.+noise(abs(ang)+n/2.)*2.)*12.)*.1+dist*.1+.8);\\n\\t\\n\\tfloat f2=max(1./(1.+32.*pow(length(uvd+.8*pos),2.)),.0)*.25;\\n\\tfloat f22=max(1./(1.+32.*pow(length(uvd+.85*pos),2.)),.0)*.23;\\n\\tfloat f23=max(1./(1.+32.*pow(length(uvd+.9*pos),2.)),.0)*.21;\\n\\t\\n\\tvec2 uvx=mix(uv,uvd,-.5);\\n\\t\\n\\tfloat f4=max(.01-pow(length(uvx+.4*pos),2.4),.0)*6.;\\n\\tfloat f42=max(.01-pow(length(uvx+.45*pos),2.4),.0)*5.;\\n\\tfloat f43=max(.01-pow(length(uvx+.5*pos),2.4),.0)*3.;\\n\\t\\n\\tuvx=mix(uv,uvd,-.4);\\n\\t\\n\\tfloat f5=max(.01-pow(length(uvx+.2*pos),5.5),.0)*2.;\\n\\tfloat f52=max(.01-pow(length(uvx+.4*pos),5.5),.0)*2.;\\n\\tfloat f53=max(.01-pow(length(uvx+.6*pos),5.5),.0)*2.;\\n\\t\\n\\tuvx=mix(uv,uvd,-.5);\\n\\t\\n\\tfloat f6=max(.01-pow(length(uvx-.3*pos),1.6),.0)*6.;\\n\\tfloat f62=max(.01-pow(length(uvx-.325*pos),1.6),.0)*3.;\\n\\tfloat f63=max(.01-pow(length(uvx-.35*pos),1.6),.0)*5.;\\n\\t\\n\\tvec3 c=vec3(.0);\\n\\t\\n\\tc.r+=f2+f4+f5+f6;c.g+=f22+f42+f52+f62;c.b+=f23+f43+f53+f63;\\n\\tc+=vec3(f0);\\n\\t\\n\\treturn c;\\n}\\n\\nvec3 cc(vec3 color,float factor,float factor2)// color modifier\\n{\\n\\tfloat w=color.x+color.y+color.z;\\n\\treturn mix(color,vec3(w)*factor,w*factor2);\\n}\\n\\nvoid main(void)\\n{\\n\\tvec2 uv=vTextureCoord.xy-.5;\\n\\t\\n\\tuv.x*=filterArea.x/filterArea.y;//fix aspect ratio\\n\\t\\n\\tvec3 mouse=vec3(vec2(uPosx,uPosy).xy/filterArea.xy-.5,0.);\\n\\t\\n\\tmouse.x*=filterArea.x/filterArea.y;//fix aspect ratio\\n\\t\\n\\tvec3 color=vec3(1.4,1.2,1.)*lenshalo(uv,mouse.xy);\\n\\t\\n\\tcolor=cc(color,.5,.1);\\n\\t\\n\\tgl_FragColor=vec4(color,1.)+texture2D(uSampler,vTextureCoord);\\n}\";\n\n/**\n * The AmoyInnerOutlineFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyLensHaloFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-lens-halo}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyLensHaloFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyLensHaloFilter(posx, posy, delta) {\n        if ( posx === void 0 ) posx = 10.0;\n        if ( posy === void 0 ) posy = 10.0;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyLensHaloFilter.__proto__ = Filter;\n    AmoyLensHaloFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyLensHaloFilter.prototype.constructor = AmoyLensHaloFilter;\n\n    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyLensHaloFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * current x\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     * current y\n     */\n    prototypeAccessors.posy.get = function () {\n        return this.uniforms.uPosy;\n    };\n\n    prototypeAccessors.posy.set = function (value) {\n        this.uniforms.uPosy = value;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyLensHaloFilter.prototype, prototypeAccessors );\n\n    return AmoyLensHaloFilter;\n}(Filter));\n\nexport { AmoyLensHaloFilter };\n//# sourceMappingURL=filter-lens-halo.esm.js.map\n","/*!\n * @amoy/filter-broken-cam-distortion - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-broken-cam-distortion is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler; // 2d texture\\nuniform float uTime;\\n\\nfloat rand(float co) {\\n    return fract(sin(dot(co,12.9898+78.233)) * 43758.5453);\\n}\\n\\nvoid main(void) {\\n\\tvec2 uv = vTextureCoord;\\n\\tvec2 uv1 = uv;\\n    uv1.y-=rand(uv.x*uTime)/60.;\\n    \\n    vec4 e = texture2D(uSampler,uv1);\\n    vec4 bn = vec4(vec3(e.r+e.g+e.b)/3.,1.0);\\n\\t\\n\\tvec2 offset = vec2(0.01*rand(uTime),sin(uTime)/30.);\\n\\te.r = texture2D(uSampler, uv+offset.xy).r;\\n\\te.g = texture2D(uSampler, uv).g;\\n\\te.b = texture2D(uSampler, uv+offset.yx).b;\\n\\n    if(sin(uTime*rand(uTime))<0.99) {\\n        gl_FragColor=mix(e,bn,0.6);\\n    } else {\\n        uv.y+=rand(uTime)/(sin(uTime)*10.);\\n        uv.x-=rand(uTime+2.)/(sin(uTime)*10.)/30.;\\n        gl_FragColor=texture2D(uSampler,uv);\\n    }\\n}\";\n\n/**\n * The AmoyBrokenCamDistortionFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyBrokenCamDistortionFilter.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @see {@link https://www.npmjs.com/package/@amoy/filter-broken-cam-distortion}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @param {number} [delta=0] - For animating interlaced lines\n */\n\nvar AmoyBrokenCamDistortionFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyBrokenCamDistortionFilter(delta){\n        if ( delta === void 0 ) delta = 0;\n\n        Filter.call(this, vertex, fragment);\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyBrokenCamDistortionFilter.__proto__ = Filter;\n    AmoyBrokenCamDistortionFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyBrokenCamDistortionFilter.prototype.constructor = AmoyBrokenCamDistortionFilter;\n\n    var prototypeAccessors = { delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyBrokenCamDistortionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyBrokenCamDistortionFilter.prototype, prototypeAccessors );\n\n    return AmoyBrokenCamDistortionFilter;\n}(Filter));\n\nexport { AmoyBrokenCamDistortionFilter };\n//# sourceMappingURL=filter-broken-cam-distortion.esm.js.map\n","/*!\n * @amoy/filter-page-curl - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-page-curl is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Texture, Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform sampler2D nextPageTexture;// 2d texture\\n\\nuniform vec4 filterArea;\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uStartPosx;\\nuniform float uStartPosy;\\nuniform float uRadius;//翻卷半径\\nuniform int uFlipmode;//反向翻转模式 0 or 1\\n\\n\\n#define pi 3.14159265359\\n//#define uRadius .04\\n\\n#define iResolution filterArea\\n#define iTime uTime\\n#define fragColor gl_FragColor\\n#define texture texture2D\\n\\nvoid main(void)\\n{\\n\\tfloat aspect=iResolution.x/iResolution.y;\\n\\tfloat radius = uRadius;\\n\\n\\tvec2 uv=vTextureCoord*filterArea.xy*vec2(aspect,1.)/iResolution.xy;\\n\\tvec2 maxuv = filterArea.xy*vec2(aspect,1.)/iResolution.xy;\\n\\tif(uFlipmode > 0){\\n\\t\\tuv.x = maxuv.x - uv.x;\\n\\t}else{\\n\\t\\tvec2 maxuv = vec2(1.0);\\n\\t}\\n\\t\\n\\tvec4 virtualMouse=vec4(uPosx,uPosy,uStartPosx,uStartPosy);\\n\\tvec2 mouse=virtualMouse.xy*vec2(aspect,1.)/iResolution.xy;\\n\\tvec2 mouseDir=normalize(abs(virtualMouse.zw)-virtualMouse.xy);\\n\\tvec2 origin=clamp(mouse-mouseDir*mouse.x/mouseDir.x,0.,1.);\\n\\t\\n\\tfloat mouseDist=clamp(length(mouse-origin)+(aspect-(abs(virtualMouse.z)/iResolution.x)*aspect)/mouseDir.x,0.,aspect/mouseDir.x);\\n\\t\\n\\tif(mouseDir.x<0.)\\n\\t{\\n\\t\\tmouseDist=distance(mouse,origin);\\n\\t}\\n\\t\\n\\tfloat proj=dot(uv-origin,mouseDir);\\n\\tfloat dist=proj-mouseDist;\\n\\t\\n\\tvec2 linePoint=uv-dist*mouseDir;\\n\\t\\n\\tif(dist>radius)\\n\\t{\\n\\t\\t//下一页面\\n\\t\\tif(uFlipmode > 0){\\n\\t\\t\\tuv.x = maxuv.x- uv.x;\\n\\t\\t}\\n\\t\\tfragColor=texture(nextPageTexture,uv*vec2(1./aspect,1.));\\n\\t\\tfragColor.rgb*= clamp(min(.99, .5 + 1. - radius/.04), 1.0, pow(clamp((dist-radius)*14.0,0.,1.),max(.05,5.*radius)));\\n\\t}\\n\\telse if(dist>=0.)\\n\\t{\\n\\t\\t// 圆柱面点映射\\n\\t\\tfloat theta=asin(dist/radius);\\n\\t\\tvec2 p2=linePoint+mouseDir*(pi-theta)*radius;\\n\\t\\tvec2 p1=linePoint+mouseDir*theta*radius;\\n\\t\\tif(p2.x<=aspect&&p2.y<=1.&&p2.x>0.&&p2.y>0.){\\n\\t\\t\\tuv = p2;\\n\\t\\t\\t//背面页 圆柱面\\n\\t\\t\\tif(uFlipmode > 0){\\n\\t\\t\\t\\tuv = (maxuv- uv*vec2(1./aspect,1.));\\n\\t\\t\\t\\tuv.y = maxuv.y- uv.y;\\n\\t\\t\\t\\tuv.x = maxuv.x- uv.x;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tuv = (1.0- uv*vec2(1./aspect,1.));\\n\\t\\t\\t\\tuv.y = 1.0- uv.y;\\n\\t\\t\\t}\\n\\t\\t\\tfragColor = texture(nextPageTexture, uv);\\n\\t\\t\\tfragColor.rgb*=clamp(min(.99, .6 + 1. - uRadius/.04), 1.0, pow(clamp((radius-dist)/radius,0.,1.), max(.05,5.*radius)));\\n\\t\\t\\tfragColor.a = 1.;\\n\\t\\t}else{\\n\\t\\t\\t//corer 圆角\\n\\t\\t\\tuv = p1;\\n\\t\\t\\tif(uFlipmode > 0){\\n\\t\\t\\t\\tuv.x = maxuv.x- uv.x;\\n\\t\\t\\t}\\n\\t\\t\\tfragColor = texture(uSampler, uv * vec2(1. / aspect, 1.));\\n\\t\\t\\tfragColor.rgb*=clamp(.94, 1.0, pow(clamp((radius-dist)/radius,0.,1.),max(.05,5.*radius)));\\n\\t\\t}\\n\\t}\\n\\telse\\n\\t{\\n\\t\\tvec2 p=linePoint+mouseDir*(abs(dist)+pi*radius);\\n\\t\\tif(p.x<=aspect&&p.y<=1.&&p.x>0.&&p.y>0.&&length(mouseDir)>0.){\\n\\t\\t\\tuv = p ;\\n\\t\\t\\t// 背面页平面区域\\n\\t\\t\\tif(uFlipmode > 0){\\n\\t\\t\\t\\tuv = (maxuv - uv*vec2(1./aspect,1.));\\n\\t\\t\\t\\tuv.y = maxuv.y - uv.y;\\n\\t\\t\\t\\tuv.x = maxuv.x- uv.x;\\n\\t\\t\\t}else{\\n\\t\\t\\t\\tuv = (1.0 - uv*vec2(1./aspect,1.));\\n\\t\\t\\t\\tuv.y = 1.0 - uv.y;\\n\\t\\t\\t}\\n\\t\\t\\tfragColor=texture(nextPageTexture,uv);\\n\\t\\t\\tfragColor.a = 1.;\\n\\t\\t}else{\\n\\t\\t\\t// 正面页面\\n\\t\\t\\tif(uFlipmode > 0){\\n\\t\\t\\t\\tuv.x = maxuv.x- uv.x;\\n\\t\\t\\t}\\n\\t\\t\\tfragColor=texture(uSampler,uv*vec2(1./aspect,1.));\\n\\t\\t}\\n\\t\\t\\n\\t}\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-page-curl}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=0.] drag moving x position\n * @param {number} [posy=0.] drag moving y position\n * @param {number} [startPosx=0.] drag start x position\n * @param {number} [startPosy=0.] drag start y position\n */\n\nvar AmoyPageCurlFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyPageCurlFilter(posx, posy, startPosx, startPosy, nextPageTexture, radius, flipMode) {\n        if ( posx === void 0 ) posx = 0.0;\n        if ( posy === void 0 ) posy = 0.0;\n        if ( startPosx === void 0 ) startPosx = 0.;\n        if ( startPosy === void 0 ) startPosy = 0.0;\n        if ( radius === void 0 ) radius=0.04;\n        if ( flipMode === void 0 ) flipMode=false;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n\n        this._size = 0;\n        this._sliceSize = 0;\n        this._slicePixelSize = 0;\n        this._sliceInnerSize = 0;\n        this._flipMode = flipMode;\n\n        this._scaleMode = null;\n\n        this.radius = radius;\n\n        this.startPosx = startPosx;\n        this.startPosy = startPosy;\n\n        this.nextPageTexture = nextPageTexture;\n    }\n\n    if ( Filter ) AmoyPageCurlFilter.__proto__ = Filter;\n    AmoyPageCurlFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyPageCurlFilter.prototype.constructor = AmoyPageCurlFilter;\n\n    var prototypeAccessors = { flipMode: { configurable: true },posx: { configurable: true },radius: { configurable: true },posy: { configurable: true },startPosx: { configurable: true },startPosy: { configurable: true },nextPageTexture: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyPageCurlFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 0.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 0.0 : this.posy;\n        this.uniforms.uRadius = this.radius;\n        this.uniforms.uFlipmode = this._flipMode ? 1:0;\n        this.uniforms.uStartPosx = this.startPosx <= 0 ? 0.0 : this.startPosx;\n        this.uniforms.uStartPosy = this.startPosy <= 0 ? 0.0 : this.startPosy;\n\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * current pos x\n     */\n    prototypeAccessors.flipMode.get = function () {\n        return this.uFlipmode.uFlipMode;\n    };\n\n    prototypeAccessors.flipMode.set = function (value) {\n        this._flipMode = value;\n        this.uniforms.uFlipmode = this._flipMode ? 1:0;\n    };\n\n    /**\n     * current pos x\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     * current pos x\n     */\n    prototypeAccessors.radius.get = function () {\n        return this.uniforms.uRadius;\n    };\n\n    prototypeAccessors.radius.set = function (value) {\n        this.uniforms.uRadius = Math.max(Math.min(value, 0.04), 0.000001);\n    };\n\n\n    /**\n     * current pos y\n     */\n    prototypeAccessors.posy.get = function () {\n        return this.uniforms.uPosy;\n    };\n\n    prototypeAccessors.posy.set = function (value) {\n        this.uniforms.uPosy = value;\n    };\n\n    /**\n     * start pos x\n     */\n    prototypeAccessors.startPosx.get = function () {\n        return this.uniforms.uStartPosx;\n    };\n\n    prototypeAccessors.startPosx.set = function (value) {\n        this.uniforms.uStartPosx = value;\n    };\n\n    /**\n     * start pos y\n     */\n    prototypeAccessors.startPosy.get = function () {\n        return this.uniforms.uStartPosy;\n    };\n\n    prototypeAccessors.startPosy.set = function (value) {\n        this.uniforms.uStartPosy = value;\n    };\n\n    /**\n     * the nextPageTexture texture\n     * @member {PIXI.Texture}\n     */\n    prototypeAccessors.nextPageTexture.get = function () {\n        return this._nextPageTexture;\n    };\n    prototypeAccessors.nextPageTexture.set = function (nextPageTexture) {\n        if (!(nextPageTexture instanceof Texture)) {\n            nextPageTexture = Texture.from(nextPageTexture);\n        }\n        if (nextPageTexture && nextPageTexture.baseTexture) {\n            nextPageTexture.baseTexture.scaleMode = this._scaleMode;\n            nextPageTexture.baseTexture.mipmap = false;\n\n            this._size = nextPageTexture.height;\n            this._sliceSize = 1 / this._size;\n            this._slicePixelSize = this._sliceSize / this._size;\n            this._sliceInnerSize = this._slicePixelSize * (this._size - 1);\n\n            this.uniforms._size = this._size;\n            this.uniforms._sliceSize = this._sliceSize;\n            this.uniforms._slicePixelSize = this._slicePixelSize;\n            this.uniforms._sliceInnerSize = this._sliceInnerSize;\n\n            this.uniforms.nextPageTexture = nextPageTexture;\n        }\n\n        this._nextPageTexture = nextPageTexture;\n    };\n\n    /**\n     * If the nextPageTexture is based on canvas , and the content of canvas has changed,\n     *   then call `updateColorMap` for update texture.\n     */\n    AmoyPageCurlFilter.prototype.updateNextPageTexture = function updateNextPageTexture () {\n        var texture = this._nextPageTexture;\n\n        if (texture && texture.baseTexture) {\n            texture._updateID++;\n            texture.baseTexture.emit('update', texture.baseTexture);\n\n            this.nextPageTexture = texture;\n        }\n    };\n\n    /**\n     * Destroys this filter\n     *\n     * @param {boolean} [destroyBase=false] Whether to destroy the base texture of nextPageTexture as well\n     */\n    AmoyPageCurlFilter.prototype.destroy = function destroy (destroyBase) {\n        if (this._nextPageTexture) {\n            this._nextPageTexture.destroy(destroyBase);\n        }\n        Filter.prototype.destroy.call(this);\n    };\n\n    Object.defineProperties( AmoyPageCurlFilter.prototype, prototypeAccessors );\n\n    return AmoyPageCurlFilter;\n}(Filter));\n\nexport { AmoyPageCurlFilter };\n//# sourceMappingURL=filter-page-curl.esm.js.map\n","/*!\n * @amoy/filter-sparks-drifting - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-sparks-drifting is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"\\nvarying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uHeight;\\nuniform float uWidth;\\nuniform float uStrength;\\nuniform float uTime;\\n\\n#define iResolution filterArea\\n#define iTime uTime\\n#define texture texture2D\\n\\n//模拟汽油燃烧\\n// Description : Array and textureless GLSL 2D/3D/4D simplex \\n//\\t\\t\\t\\t\\t\\t\\t noise functions.\\n//\\t\\t\\tAuthor : Ian McEwan, Ashima Arts.\\n//\\tMaintainer : ijm\\n//\\t\\t Lastmod : 20110822 (ijm)\\n//\\t\\t License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//\\t\\t\\t\\t\\t\\t\\t Distributed under the MIT License. See LICENSE file.\\n//\\t\\t\\t\\t\\t\\t\\t https://github.com/ashima/webgl-noise\\n// \\n\\nvec3 mod289(vec3 x){\\n\\treturn x-floor(x*(1./289.))*289.;\\n}\\n\\nvec4 mod289(vec4 x){\\n\\treturn x-floor(x*(1./289.))*289.;\\n}\\n\\nvec4 permute(vec4 x){\\n\\treturn mod289(((x*34.)+1.)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n\\treturn 1.79284291400159-.85373472095314*r;\\n}\\n\\nfloat snoise(vec3 v)\\n{\\n\\tconst vec2 C=vec2(1./6.,1./3.);\\n\\tconst vec4 D=vec4(0.,.5,1.,2.);\\n\\t\\n\\t// First corner\\n\\tvec3 i=floor(v+dot(v,C.yyy));\\n\\tvec3 x0=v-i+dot(i,C.xxx);\\n\\t\\n\\t// Other corners\\n\\tvec3 g=step(x0.yzx,x0.xyz);\\n\\tvec3 l=1.-g;\\n\\tvec3 i1=min(g.xyz,l.zxy);\\n\\tvec3 i2=max(g.xyz,l.zxy);\\n\\t\\n\\t//\\t x0 = x0 - 0.0 + 0.0 * C.xxx;\\n\\t//\\t x1 = x0 - i1\\t+ 1.0 * C.xxx;\\n\\t//\\t x2 = x0 - i2\\t+ 2.0 * C.xxx;\\n\\t//\\t x3 = x0 - 1.0 + 3.0 * C.xxx;\\n\\tvec3 x1=x0-i1+C.xxx;\\n\\tvec3 x2=x0-i2+C.yyy;// 2.0*C.x = 1/3 = C.y\\n\\tvec3 x3=x0-D.yyy;// -1.0+3.0*C.x = -0.5 = -D.y\\n\\t\\n\\t// Permutations\\n\\ti=mod289(i);\\n\\tvec4 p=permute(permute(permute(i.z+vec4(0.,i1.z,i2.z,1.))+i.y+vec4(0.,i1.y,i2.y,1.))+i.x+vec4(0.,i1.x,i2.x,1.));\\n\\t\\n\\t// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n\\t// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n\\tfloat n_=.142857142857;// 1.0/7.0\\n\\tvec3 ns=n_*D.wyz-D.xzx;\\n\\t\\n\\tvec4 j=p-49.*floor(p*ns.z*ns.z);//\\tmod(p,7*7)\\n\\t\\n\\tvec4 x_=floor(j*ns.z);\\n\\tvec4 y_=floor(j-7.*x_);// mod(j,N)\\n\\t\\n\\tvec4 x=x_*ns.x+ns.yyyy;\\n\\tvec4 y=y_*ns.x+ns.yyyy;\\n\\tvec4 h=1.-abs(x)-abs(y);\\n\\t\\n\\tvec4 b0=vec4(x.xy,y.xy);\\n\\tvec4 b1=vec4(x.zw,y.zw);\\n\\t\\n\\t//vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n\\t//vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n\\tvec4 s0=floor(b0)*2.+1.;\\n\\tvec4 s1=floor(b1)*2.+1.;\\n\\tvec4 sh=-step(h,vec4(0.));\\n\\t\\n\\tvec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\\n\\tvec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\\n\\t\\n\\tvec3 p0=vec3(a0.xy,h.x);\\n\\tvec3 p1=vec3(a0.zw,h.y);\\n\\tvec3 p2=vec3(a1.xy,h.z);\\n\\tvec3 p3=vec3(a1.zw,h.w);\\n\\t\\n\\t//Normalise gradients\\n\\t//vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n\\tvec4 norm=inversesqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\\n\\tp0*=norm.x;\\n\\tp1*=norm.y;\\n\\tp2*=norm.z;\\n\\tp3*=norm.w;\\n\\t\\n\\t// Mix final noise value\\n\\tvec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\\n\\tm=m*m;\\n\\treturn 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));\\n}\\n\\n//////////////////////////////////////////////////////////////\\n\\n// PRNG\\n// From https://www.shadertoy.com/view/4djSRW\\nfloat prng(in vec2 seed){\\n\\tseed=fract(seed*vec2(5.3983,5.4427));\\n\\tseed+=dot(seed.yx,seed.xy+vec2(21.5351,14.3137));\\n\\treturn fract(seed.x*seed.y*95.4337);\\n}\\n\\n//////////////////////////////////////////////////////////////\\n\\nfloat PI=3.1415926535897932384626433832795;\\n\\nfloat noiseStack(vec3 pos,int octaves,float falloff){\\n\\tfloat noise=snoise(vec3(pos));\\n\\tfloat off=1.;\\n\\tif(octaves>1){\\n\\t\\tpos*=2.;\\n\\t\\toff*=falloff;\\n\\t\\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\\n\\t}\\n\\tif(octaves>2){\\n\\t\\tpos*=2.;\\n\\t\\toff*=falloff;\\n\\t\\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\\n\\t}\\n\\tif(octaves>3){\\n\\t\\tpos*=2.;\\n\\t\\toff*=falloff;\\n\\t\\tnoise=(1.-off)*noise+off*snoise(vec3(pos));\\n\\t}\\n\\treturn(1.+noise)/2.;\\n}\\n\\nvec2 noiseStackUV(vec3 pos,int octaves,float falloff,float diff){\\n\\tfloat displaceA=noiseStack(pos,octaves,falloff);\\n\\tfloat displaceB=noiseStack(pos+vec3(3984.293,423.21,5235.19),octaves,falloff);\\n\\treturn vec2(displaceA,displaceB);\\n}\\n\\nvoid main(){\\n\\tfloat time=iTime;\\n\\tvec2 resolution=iResolution.xy;\\n\\tvec2 fragCoord=vTextureCoord*filterArea.xy;\\n\\tvec2 offset=vec2(0.);\\n\\t//\\n\\tfloat xpart=fragCoord.x/resolution.x;\\n\\tfloat ypart=fragCoord.y/resolution.y;\\n\\t//\\n\\tfloat clip=uHeight;\\n\\tfloat ypartClip=1.0 - fragCoord.y/clip;//开始Y方向\\n\\tfloat ypartClippedFalloff=clamp(2.-ypartClip,0.,1.);//【0-1】\\n\\tfloat ypartClipped=min(ypartClip,1.);\\n\\tfloat ypartClippedn=1.-ypartClipped;\\n\\t//X方向油量\\n\\tfloat xfuel=pow(1.-abs(2.*xpart-1.),(1.0 - (uWidth/resolution.x))*5.0);\\n\\t//\\n\\tfloat timeSpeed=.5;\\n\\tfloat realTime=timeSpeed*time;\\n\\t//\\n\\tvec2 coordScaled=.01*fragCoord-.02*vec2(offset.x,0.);\\n\\tvec3 position=vec3(coordScaled,0.)+vec3(1223.,6434.,8425.);\\n\\tvec3 flow=vec3(4.1*(.5-xpart)*pow(ypartClippedn,4.),-2.*xfuel*pow(ypartClippedn,64.),0.);\\n\\tvec3 timing=realTime*vec3(0.,1.7,1.1)+flow;\\n\\t//\\n\\tvec3 displacePos=vec3(1.,.5,1.)*2.4*position+realTime*vec3(.01,.7,1.3);\\n\\tvec3 displace3=vec3(noiseStackUV(displacePos,2,.4,.1),0.);\\n\\t//\\n\\tvec3 noiseCoord=(vec3(2.,1.,1.)*position+timing+.4*displace3)/1.;\\n\\tfloat noise=noiseStack(noiseCoord,3,.4);\\n\\t//\\n\\tfloat flames=pow(ypartClipped,.3*xfuel)*pow(noise,.3*xfuel);\\n\\t//\\n\\tfloat f=ypartClippedFalloff*pow(1.-flames*flames*flames,8.);\\n\\tfloat fff=f*f*f;\\n\\tvec3 fire=uStrength*vec3(f,fff,fff*fff);\\n\\t\\n\\t// smoke\\n\\tfloat smokeNoise=.5+snoise(.4*position+timing*vec3(1.,1.,.2))/2.;\\n\\tvec3 smoke=vec3(.3*pow(xfuel,3.)*pow(ypart,2.)*(smokeNoise+.4*(1.-noise)));\\n\\t\\n\\t// sparks\\n\\tfloat sparkGridSize=30.*uStrength;\\n\\tvec2 sparkCoord=0.0 - fragCoord-vec2(2.*offset.x,190.*realTime);\\n\\tsparkCoord-=30.*noiseStackUV(.01*vec3(sparkCoord,30.*time),1,.4,.1);\\n\\tsparkCoord+=100.*flow.xy;\\n\\tif(mod(sparkCoord.y/sparkGridSize,2.)<1.)sparkCoord.x+=.5*sparkGridSize;\\n\\tvec2 sparkGridIndex=vec2(floor(sparkCoord/sparkGridSize));\\n\\tfloat sparkRandom=prng(sparkGridIndex);\\n\\tfloat sparkLife=min(10.*(1.-min((sparkGridIndex.y+(190.*realTime/sparkGridSize))/(24.-20.*sparkRandom),1.)),1.);\\n\\tvec3 sparks=vec3(0.);\\n\\tif(sparkLife>0.){\\n\\t\\tfloat sparkSize=xfuel*xfuel*sparkRandom*.08;\\n\\t\\tfloat sparkRadians=999.*sparkRandom*2.*PI+2.*time;\\n\\t\\tvec2 sparkCircular=vec2(sin(sparkRadians),cos(sparkRadians));\\n\\t\\tvec2 sparkOffset=(.5-sparkSize)*sparkGridSize*sparkCircular;\\n\\t\\tvec2 sparkModulus=mod(sparkCoord+sparkOffset,sparkGridSize)-.5*vec2(sparkGridSize);\\n\\t\\tfloat sparkLength=length(sparkModulus);\\n\\t\\tfloat sparksGray=max(0.,1.-sparkLength/(sparkSize*sparkGridSize));\\n\\t\\tsparks=sparkLife*sparksGray*vec3(0.9333, 0.498, 0.1412);\\n\\t}\\n\\t//\\n\\tvec4 effect = vec4(max(fire,sparks)+smoke,1.);\\n\\teffect.a = effect.r;\\n\\tgl_FragColor = effect + texture2D(uSampler, vTextureCoord);\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/spark-drfting}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [height=0.0] spark height\n * @param {number} [widht=0.0] spark width\n * @param {number} [strength=0.0] strength\n * @param {number} [delta=0.0] time for shader animation\n */\n\nvar AmoySparksDriftingFilter = /*@__PURE__*/(function (Filter) {\n    function AmoySparksDriftingFilter(height, width, strength, delta) {\n        if ( height === void 0 ) height = 0.0;\n        if ( width === void 0 ) width = 0.0;\n        if ( strength === void 0 ) strength = 2.;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.height = height;\n        this.width = width;\n        this.strength = strength;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoySparksDriftingFilter.__proto__ = Filter;\n    AmoySparksDriftingFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoySparksDriftingFilter.prototype.constructor = AmoySparksDriftingFilter;\n\n    var prototypeAccessors = { width: { configurable: true },height: { configurable: true },strength: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoySparksDriftingFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uWidth = this.width;\n        this.uniforms.uHeight = this.height;\n        this.uniforms.uStrength = this.strength;\n        this.uniforms.uTime = this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * fire w\n     */\n    prototypeAccessors.width.get = function () {\n        return this.uniforms.uWidth;\n    };\n\n    prototypeAccessors.width.set = function (value) {\n        this.uniforms.uWidth = value;\n    };\n\n    /**\n     * fire H\n     */\n    prototypeAccessors.height.get = function () {\n        return this.uniforms.uHeight;\n    };\n\n    prototypeAccessors.height.set = function (value) {\n        this.uniforms.uHeight = value;\n    };\n\n    /**\n     * fire strength\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.uStrength;\n    };\n\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.uStrength = value;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoySparksDriftingFilter.prototype, prototypeAccessors );\n\n    return AmoySparksDriftingFilter;\n}(Filter));\n\nexport { AmoySparksDriftingFilter };\n//# sourceMappingURL=filter-sparks-drifting.esm.js.map\n","/*!\n * @amoy/filter-white-black-sketch - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-white-black-sketch is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture2D\\nuniform vec4 filterArea;\\n\\nuniform int uInvertColor;\\nuniform float uTime;\\n\\nfloat rand(float x)\\n{\\n    return fract(sin(x)*43758.5453);\\n}\\n\\nfloat triangle(float x)\\n{\\n    return abs(1.-mod(abs(x),2.))*2.-1.;\\n}\\n\\nvoid main()\\n{\\n    float time=floor(uTime*16.)/16.;\\n    \\n    vec2 uv=vTextureCoord;\\n    \\n    // pixel position\\n    vec2 p=uv;\\n    p+=vec2(triangle(p.y*rand(time)*4.)*rand(time*1.9)*.015,\\n    triangle(p.x*rand(time*3.4)*4.)*rand(time*2.1)*.015);\\n    p+=vec2(rand(p.x*3.1+p.y*8.7)*.01,\\n    rand(p.x*1.1+p.y*6.7)*.01);\\n    \\n    // vec2 blurredUV = vec2(p.x+0.003,p.y+0.003);\\n    // vec4 baseColor = vec4(texture(iChannel0, blurredUV).rgb,1.);\\n\\n    vec4 baseColor=vec4(texture2D(uSampler,uv).rgb,1.);\\n    vec4 edges=1.-(baseColor/vec4(texture2D(uSampler,p).rgb,1.));\\n    \\n    if(uInvertColor>0){\\n        baseColor.rgb=vec3(baseColor.r);\\n        gl_FragColor=baseColor/vec4(length(edges));\\n    }else{\\n        gl_FragColor=vec4(length(edges));\\n    }\\n}\";\n\n/**\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@amoy/filter-white-black-sketch}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @memberof AMOY.filters\n * @param {boolean} [invertColor = false] invertcolor true or false\n * @param {number} [delta = 0] time for animation\n */\n\nvar AmoyWhiteBlackSketchFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyWhiteBlackSketchFilter(invertColor, delta) {\n        if ( invertColor === void 0 ) invertColor = false;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this._invertColor = invertColor;\n        this.invertColor = invertColor;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyWhiteBlackSketchFilter.__proto__ = Filter;\n    AmoyWhiteBlackSketchFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyWhiteBlackSketchFilter.prototype.constructor = AmoyWhiteBlackSketchFilter;\n\n    var prototypeAccessors = { invertColor: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyWhiteBlackSketchFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uInvertColor = this.invertColor ? 1 : 0;\n        this.uniforms.uTime = this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * color invert boolean\n     */\n    prototypeAccessors.invertColor.get = function () {\n        return this._invertColor;\n    };\n\n    prototypeAccessors.invertColor.set = function (value) {\n        this._invertColor = value;\n        this.uniforms.uInvertColor = value ? 1 : 0;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyWhiteBlackSketchFilter.prototype, prototypeAccessors );\n\n    return AmoyWhiteBlackSketchFilter;\n}(Filter));\n\nexport { AmoyWhiteBlackSketchFilter };\n//# sourceMappingURL=filter-white-black-sketch.esm.js.map\n","/*!\n * @amoy/filter-vcr - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-vcr is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler; // 2d texture2D\\nuniform vec4 filterArea;\\n\\nuniform float uTime;\\n\\n//噪音简化算法，效率高\\n// Description : Array and textureless GLSL 2D simplex snoise function.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : stegu\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-snoise\\n//               https://github.com/stegu/webgl-snoise\\n// \\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n\\t\\t+ i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final snoise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\\nfloat onOff(float a, float b, float c)\\n{\\n\\treturn step(c, sin(uTime + a*cos(uTime*b)));\\n}\\n\\nfloat ramp(float y, float start, float end)\\n{\\n\\tfloat inside = step(start,y) - step(end,y);\\n\\tfloat fact = (y-start)/(end-start)*inside;\\n\\treturn (1.-fact) * inside;\\n\\t\\n}\\n\\nfloat stripes(vec2 uv)\\n{\\n\\tfloat noi = snoise(uv*vec2(0.5,1.) + vec2(1.,3.));\\n\\treturn ramp(mod(uv.y*4. + uTime/2.+sin(uTime + sin(uTime*0.63)),1.),0.5,0.6)*noi;\\n}\\n\\nvec3 getVideo(vec2 uv)\\n{\\n\\tvec2 look = uv;\\n\\tfloat window = 1./(1.+20.*(look.y-mod(uTime/4.,1.))*(look.y-mod(uTime/4.,1.)));\\n\\tlook.x = look.x + sin(look.y*10. + uTime)/50.*onOff(4.,4.,.3)*(1.+cos(uTime*80.))*window;\\n\\tfloat vShift = 0.4*onOff(2.,3.,.9)*(sin(uTime)*sin(uTime*20.) + (0.5 + 0.1*sin(uTime*200.)*cos(uTime)));\\n\\tlook.y = mod(look.y + vShift, 1.);\\n\\tvec3 video = vec3(texture2D(uSampler,look));\\n\\treturn video;\\n}\\n\\nvec2 screenDistort(vec2 uv)\\n{\\n\\tuv -= vec2(.5,.5);\\n\\tuv = uv*1.2*(1./1.2+2.*uv.x*uv.x*uv.y*uv.y);\\n\\tuv += vec2(.5,.5);\\n\\treturn uv;\\n}\\n\\nvoid main(void)\\n{\\n\\tvec2 uv = vTextureCoord;\\n\\tuv = screenDistort(uv);\\n\\tvec3 video = getVideo(uv);\\n\\tfloat vigAmt = 3.+.3*sin(uTime + 5.*cos(uTime*5.));\\n\\tfloat vignette = (1.-vigAmt*(uv.y-.5)*(uv.y-.5))*(1.-vigAmt*(uv.x-.5)*(uv.x-.5));\\n\\t\\n\\tvideo += stripes(uv);\\n\\tvideo += snoise(uv*2.)/2.;\\n\\tvideo *= vignette;\\n\\tvideo *= (12.+mod(uv.y*30.+uTime,1.))/13.;\\n\\t\\n\\tgl_FragColor = vec4(video,1.0);\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-vcr}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta] time for shader animation\n */\n\nvar AmoyVcrFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyVcrFilter(delta) {\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyVcrFilter.__proto__ = Filter;\n    AmoyVcrFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyVcrFilter.prototype.constructor = AmoyVcrFilter;\n\n    var prototypeAccessors = { delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyVcrFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyVcrFilter.prototype, prototypeAccessors );\n\n    return AmoyVcrFilter;\n}(Filter));\n\nexport { AmoyVcrFilter };\n//# sourceMappingURL=filter-vcr.esm.js.map\n","/*!\n * @amoy/filter-flame - v3.0.25\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-flame is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uStrength;\\nuniform float uTime;\\n//////////////////////\\n// Fire Flame shader\\n\\n// procedural noise from IQ\\nvec2 hash(vec2 p)\\n{\\n\\tp=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\\n\\treturn-1.+2.*fract(sin(p)*43758.5453123);\\n}\\n\\nfloat noise(in vec2 p)\\n{\\n\\tconst float K1=.366025404;// (sqrt(3)-1)/2;\\n\\tconst float K2=.211324865;// (3-sqrt(3))/6;\\n\\t\\n\\tvec2 i=floor(p+(p.x+p.y)*K1);\\n\\t\\n\\tvec2 a=p-i+(i.x+i.y)*K2;\\n\\tvec2 o=(a.x>a.y)?vec2(1.,0.):vec2(0.,1.);\\n\\tvec2 b=a-o+K2;\\n\\tvec2 c=a-1.+2.*K2;\\n\\t\\n\\tvec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\\n\\t\\n\\tvec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\\n\\t\\n\\treturn dot(n,vec3(70.));\\n}\\n\\nfloat fbm(vec2 uv)\\n{\\n\\tfloat f;\\n\\tmat2 m=mat2(1.6,1.2,-1.2,1.6);\\n\\tf=.5000*noise(uv);uv=m*uv;\\n\\tf+=.2500*noise(uv);uv=m*uv;\\n\\tf+=.1250*noise(uv);uv=m*uv;\\n\\tf+=.0625*noise(uv);uv=m*uv;\\n\\tf=.5+.5*f;\\n\\treturn f;\\n}\\n\\nvoid main()\\n{\\n\\tvec2 uv=vTextureCoord;\\n\\tvec2 q=uv;\\n\\tq.y = 1.0 - q.y;\\n\\tfloat strength=uStrength;\\n\\tfloat T3=max(3.,1.25*strength)*uTime;\\n\\tq.x-=uPosx/filterArea.x;\\n\\tq.y-=uPosy/filterArea.y;\\n\\tfloat n=fbm(strength*q-vec2(0,T3));\\n\\tfloat c=1.-26.*pow(max(0.,length(q*vec2(1.8+q.y*1.5,.75))-n*max(0.,q.y+.25)),1.2);\\n\\tfloat c1=n*c*(1.5-pow(1.50*(1.0 - uv.y),1.2));\\n\\tc1=clamp(c1,0.,1.);\\n\\t\\n\\tvec3 col=vec3(1.5*c1,1.5*c1*c1*c1,c1*c1*c1*c1*c1*c1);\\n\\t\\n\\tfloat a=c*(1.-pow(uv.y,3.));\\n\\tgl_FragColor=vec4(mix(vec3(0.),col,a),1.)+texture2D(uSampler,vTextureCoord);\\n}\";\n\n/**\n *\n *  * The AmoyFlameFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyFlameFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-flame}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] flame center x position in pic\n * @param {number} [posy=10.0] flame center y position in pic\n * @param {number} [strength=2.0] strength of flame\n * @param {number} [delta=0] - For animating interlaced lines\n */\n\nvar AmoyFlameFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyFlameFilter(posx, posy, strength, delta) {\n        if ( posx === void 0 ) posx = 10.0;\n        if ( posy === void 0 ) posy = 10.0;\n        if ( strength === void 0 ) strength = 2.;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.strength = strength;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyFlameFilter.__proto__ = Filter;\n    AmoyFlameFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyFlameFilter.prototype.constructor = AmoyFlameFilter;\n\n    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true },strength: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyFlameFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        this.uniforms.uStrength = this.strength;\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * current x\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     * current y\n     */\n    prototypeAccessors.posy.get = function () {\n        return this.uniforms.uPosy;\n    };\n\n    prototypeAccessors.posy.set = function (value) {\n        this.uniforms.uPosy = value;\n    };\n\n    /**\n     * flame strength\n     */\n    prototypeAccessors.strength.get = function () {\n        return this.uniforms.uStrength;\n    };\n\n    prototypeAccessors.strength.set = function (value) {\n        this.uniforms.uStrength = value;\n    };\n\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyFlameFilter.prototype, prototypeAccessors );\n\n    return AmoyFlameFilter;\n}(Filter));\n\nexport { AmoyFlameFilter };\n//# sourceMappingURL=filter-flame.esm.js.map\n","/*!\n * @amoy/filter-gameboy-style - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-gameboy-style is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uTime;\\n\\nvoid main(){\\n\\tvec2 fragCoord=vTextureCoord*filterArea.xy;\\n\\tvec2 uv=fragCoord.xy/filterArea.xy;\\n\\tconst float resolution=160.;//步长\\n\\tuv=floor(uv*resolution)/resolution;// 0 or 1\\n\\t\\n\\tvec3 color=texture2D(uSampler,uv).rgb;\\n\\t\\n\\tfloat intensity=(color.r+color.g+color.b)/3.;\\n\\tint index=int(intensity*4.);\\n\\n\\tif(index == 0){\\n\\t\\tgl_FragColor=vec4(vec3(15./255., 56./255., 15./255.),1.);\\n\\t}else if(index == 1){\\n\\t\\tgl_FragColor=vec4(vec3(48./255., 98./255., 48./255.),1.);\\n\\t}else if(index == 2){\\n\\t\\tgl_FragColor=vec4(vec3(139./255., 172./255., 15./255.),1.);\\n\\t}else{\\n\\t\\tgl_FragColor=vec4(vec3(155./255., 188./255., 15./255.),1.);\\n\\t}\\n}\";\n\n/**\n *\n *  * The AmoyGameboyStyleFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyGameboyStyleFilter.png)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-gameboy-style}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyGameboyStyleFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyGameboyStyleFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n    }\n\n    if ( Filter ) AmoyGameboyStyleFilter.__proto__ = Filter;\n    AmoyGameboyStyleFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyGameboyStyleFilter.prototype.constructor = AmoyGameboyStyleFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyGameboyStyleFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyGameboyStyleFilter;\n}(Filter));\n\nexport { AmoyGameboyStyleFilter };\n//# sourceMappingURL=filter-gameboy-style.esm.js.map\n","/*!\n * @amoy/filter-snow - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-snow is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform int uBlizard;\\nuniform float uTime;\\n\\nconst mat3 p=mat3(13.323122,23.5112,21.71123,21.1212,28.7312,11.9312,21.8112,14.7212,61.3934);\\n\\t\\nvec3 createSnow(int i,float depth,float width,float speed,float dof,vec2 uv){\\n\\tfloat fi=float(i);\\n\\tvec2 q=uv*(1.+fi*depth);\\n\\tq+=vec2(q.y*(width*mod(fi*7.238917,1.)-width*.5),speed*uTime/(1.+fi*depth*.03));\\n\\tvec3 n=vec3(floor(q),31.189+fi);\\n\\tvec3 m=floor(n)*.00001+fract(n);\\n\\tvec3 mp=(31415.9+m)/fract(p*m);\\n\\tvec3 r=fract(mp);\\n\\tvec2 s=abs(mod(q,1.)-.5+.9*r.xy-.45);\\n\\ts+=.01*abs(2.*fract(10.*q.yx)-1.);\\n\\tfloat d=.6*max(s.x-s.y,s.x+s.y)+max(s.x,s.y)-.01;\\n\\tfloat edge=.005+.05*min(.5*abs(fi-5.-dof),1.);\\n\\treturn vec3(smoothstep(edge,-edge,d)*(r.x/(1.+.02*fi*depth)));\\n}\\n\\nvoid main()\\n{\\n\\tvec2 fragCoord=vTextureCoord*filterArea.xy;\\n\\tvec2 uv=vec2(1.,filterArea.y/filterArea.x)*fragCoord.xy/filterArea.xy;\\n\\tvec3 acc=vec3(0.);\\n\\tfloat dof=5.*sin(uTime*.1);\\n\\tif(uBlizard==1){\\n\\t\\tfor(int i=0;i<100;i++){\\n\\t\\t\\tacc+=createSnow(i,.1,.8,-1.5,dof,uv);\\n\\t\\t}\\n\\t}else{\\n\\t\\tfor(int i=0;i<50;i++){\\n\\t\\t\\tacc+=createSnow(i,.5,.3,-.6,dof,uv);\\n\\t\\t}\\n\\t}\\n\\tgl_FragColor=vec4(vec3(acc),1.) + texture2D(uSampler, vTextureCoord);\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/snow}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {Boolen} [blizard=false] snow mode true or false\n * @param {number} [delta=0] time for animation\n */\n\nvar AmoySnowFilter = /*@__PURE__*/(function (Filter) {\n    function AmoySnowFilter(blizard, delta) {\n        if ( blizard === void 0 ) blizard = false;\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this._blizard = blizard;\n        this.blizard = this._blizard;\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoySnowFilter.__proto__ = Filter;\n    AmoySnowFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoySnowFilter.prototype.constructor = AmoySnowFilter;\n\n    var prototypeAccessors = { blizard: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoySnowFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uBlizard = this._blizard?1:0;\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     *  snow model\n     */\n    prototypeAccessors.blizard.get = function () {\n        return this._blizard;\n    };\n\n    prototypeAccessors.blizard.set = function (value) {\n        this._blizard = value;\n        this.uniforms.uBlizard = value?1:0;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoySnowFilter.prototype, prototypeAccessors );\n\n    return AmoySnowFilter;\n}(Filter));\n\nexport { AmoySnowFilter };\n//# sourceMappingURL=filter-snow.esm.js.map\n","/*!\n * @amoy/filter-light-sweep - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-light-sweep is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uTime;\\n\\nvoid main()\\n{\\n\\t\\n\\tvec2 uv=vTextureCoord;\\n\\tuv.x *=.5;\\n\\tfloat col=sin(uv.y+uv.x*3.-uTime*6.)*.9;\\n\\tcol*=col*col*.6;\\n\\n\\tcol= clamp(col,0.,1.);\\n\\t\\n\\tvec4 tex=texture2D(uSampler,vTextureCoord);\\n\\tif(tex.a < .005){\\n\\t\\tdiscard;\\n\\t}\\n\\tgl_FragColor=tex+vec4(col,col,col,tex.a);\\n}\";\n\n/**\n * The AmoyLightSweepFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyLightSweepFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-light-sweep}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta=0] time for shader animation\n */\n\nvar AmoyLightSweepFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyLightSweepFilter(delta) {\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyLightSweepFilter.__proto__ = Filter;\n    AmoyLightSweepFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyLightSweepFilter.prototype.constructor = AmoyLightSweepFilter;\n\n    var prototypeAccessors = { delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyLightSweepFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyLightSweepFilter.prototype, prototypeAccessors );\n\n    return AmoyLightSweepFilter;\n}(Filter));\n\nexport { AmoyLightSweepFilter };\n//# sourceMappingURL=filter-light-sweep.esm.js.map\n","/*!\n * @amoy/filter-reflection - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-reflection is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nvoid main(void)\\n{\\n\\tvec2 uv;\\n\\tuv.x=vTextureCoord.x;\\n\\tuv.y=1.-vTextureCoord.y;\\n\\t\\n\\tgl_FragColor=texture2D(uSampler,uv)*uv.y;\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-reflection}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyReflectionFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyReflectionFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n    }\n\n    if ( Filter ) AmoyReflectionFilter.__proto__ = Filter;\n    AmoyReflectionFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyReflectionFilter.prototype.constructor = AmoyReflectionFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyReflectionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyReflectionFilter;\n}(Filter));\n\nexport { AmoyReflectionFilter };\n//# sourceMappingURL=filter-reflection.esm.js.map\n","/*!\n * @amoy/filter-water-reflection - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-water-reflection is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\nuniform float boundary;\\nuniform float uTime;\\n\\nvoid main()\\n{\\n    vec2 uv=vTextureCoord;\\n    vec4 waterColor=vec4(1.);\\n    float reflactionY=boundary;\\n    if(uv.y>reflactionY)\\n    {\\n        float oy=uv.y;\\n        uv.y=2.*reflactionY-uv.y;\\n        uv.y=uv.y+sin(1./(oy-reflactionY)+uTime*10.)*.003;\\n        waterColor=vec4(.5882,.7529,.9216,1.);\\n    }\\n    \\n    gl_FragColor=texture2D(uSampler,uv)*waterColor;\\n}\\n\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-weather-reflection}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta = 0] time for animation\n */\n\nvar AmoyWaterReflectionFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyWaterReflectionFilter(delta, boundary) {\n        if ( delta === void 0 ) delta = 0.0;\n        if ( boundary === void 0 ) boundary = .5;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.delta = delta;\n        this.boundary = boundary;\n    }\n\n    if ( Filter ) AmoyWaterReflectionFilter.__proto__ = Filter;\n    AmoyWaterReflectionFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyWaterReflectionFilter.prototype.constructor = AmoyWaterReflectionFilter;\n\n    var prototypeAccessors = { delta: { configurable: true },boundary: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyWaterReflectionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    /**\n     * Vertical position of the reflection point, default is 50% (middle)\n     * smaller numbers produce a larger reflection, larger numbers produce a smaller reflection.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    prototypeAccessors.boundary.set = function (value) {\n        this.uniforms.boundary = value;\n    };\n    prototypeAccessors.boundary.get = function () {\n        return this.uniforms.boundary;\n    };\n\n    Object.defineProperties( AmoyWaterReflectionFilter.prototype, prototypeAccessors );\n\n    return AmoyWaterReflectionFilter;\n}(Filter));\n\nexport { AmoyWaterReflectionFilter };\n//# sourceMappingURL=filter-water-reflection.esm.js.map\n","/*!\n * @amoy/filter-weather-rainy - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-weather-rainy is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uTime;\\n\\nfloat rand(vec2 p){\\n\\tp+=.2127+p.x+.3713*p.y;\\n\\tvec2 r=4.789*sin(789.123*(p));\\n\\treturn fract(r.x*r.y);\\n}\\n//sample noise\\nfloat sn(vec2 p){\\n\\tvec2 i=floor(p-.5);\\n\\tvec2 f=fract(p-.5);\\n\\tf=f*f*f*(f*(f*6.-15.)+10.);\\n\\tfloat rt=mix(rand(i),rand(i+vec2(1.,0.)),f.x);\\n\\tfloat rb=mix(rand(i+vec2(0.,1.)),rand(i+vec2(1.,1.)),f.x);\\n\\treturn mix(rt,rb,f.y);\\n}\\n\\nvoid main(void)\\n{\\n\\tvec2 uv=vTextureCoord;\\n\\tuv.y = 1.0 - uv.y;\\n\\tvec2 newUV=uv;\\n\\tnewUV.x-=uTime*.3;\\n\\tnewUV.y+=uTime*3.;\\n\\tfloat strength=sin(uTime*.5+sn(newUV))*.1+.2;\\n\\tfloat rain=sn(vec2(newUV.x*20.1,newUV.y*40.1+newUV.x*400.1-20.*strength));\\n\\tfloat rain2=sn(vec2(newUV.x*45.+uTime*.5,newUV.y*30.1+newUV.x*100.1));\\n\\train=strength-rain;\\n\\train+=rain2*(sin(strength)-.4)*2.;\\n\\train=clamp(rain,0.,.5)*.8;\\n\\t\\n\\tgl_FragColor=vec4(vec3(rain),1.)+texture2D(uSampler,vTextureCoord);\\n}\";\n\n/**\n * @class\n * @extends PIXI.Filter\n * @see {@link https://www.npmjs.com/package/@amoy/weather-rainy|@amoy/weather-rainy}\n * @see {@link https://www.npmjs.com/package/@amoy/filters|@amoy/filters}\n * @memberof AMOY.filters\n * @param {number} [delta = 0] time for animation\n */\n\nvar AmoyWeatherRainyFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyWeatherRainyFilter(delta) {\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyWeatherRainyFilter.__proto__ = Filter;\n    AmoyWeatherRainyFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyWeatherRainyFilter.prototype.constructor = AmoyWeatherRainyFilter;\n\n    var prototypeAccessors = { delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyWeatherRainyFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyWeatherRainyFilter.prototype, prototypeAccessors );\n\n    return AmoyWeatherRainyFilter;\n}(Filter));\n\nexport { AmoyWeatherRainyFilter };\n//# sourceMappingURL=filter-weather-rainy.esm.js.map\n","/*!\n * @amoy/filter-weather-cloud - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-weather-cloud is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uTime;\\n\\nvec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}\\nvec4 mod289(vec4 x){\\n\\treturn x-floor(x*(1./289.))*289.;\\n}\\nvec4 permute(vec4 x){\\n\\treturn mod289(((x*34.)+1.)*x);\\n}\\nvec4 taylorInvSqrt(vec4 r){\\n\\treturn 1.79284291400159-.85373472095314*r;\\n}\\nvec3 fade(vec3 t){\\n\\treturn t*t*t*(t*(t*6.-15.)+10.);\\n}\\nfloat noise(vec3 P){\\n\\tvec3 i0=mod289(floor(P)),i1=mod289(i0+vec3(1.)),\\n\\tf0=fract(P),f1=f0-vec3(1.),f=fade(f0);\\n\\tvec4 ix=vec4(i0.x,i1.x,i0.x,i1.x),iy=vec4(i0.yy,i1.yy),\\n\\tiz0=i0.zzzz,iz1=i1.zzzz,\\n\\tixy=permute(permute(ix)+iy),ixy0=permute(ixy+iz0),ixy1=permute(ixy+iz1),\\n\\tgx0=ixy0*(1./7.),gy0=fract(floor(gx0)*(1./7.))-.5,\\n\\tgx1=ixy1*(1./7.),gy1=fract(floor(gx1)*(1./7.))-.5;\\n\\tgx0=fract(gx0);gx1=fract(gx1);\\n\\tvec4 gz0=vec4(.5)-abs(gx0)-abs(gy0),sz0=step(gz0,vec4(0.)),\\n\\tgz1=vec4(.5)-abs(gx1)-abs(gy1),sz1=step(gz1,vec4(0.));\\n\\tgx0-=sz0*(step(0.,gx0)-.5);gy0-=sz0*(step(0.,gy0)-.5);\\n\\tgx1-=sz1*(step(0.,gx1)-.5);gy1-=sz1*(step(0.,gy1)-.5);\\n\\tvec3 g0=vec3(gx0.x,gy0.x,gz0.x),g1=vec3(gx0.y,gy0.y,gz0.y),\\n\\tg2=vec3(gx0.z,gy0.z,gz0.z),g3=vec3(gx0.w,gy0.w,gz0.w),\\n\\tg4=vec3(gx1.x,gy1.x,gz1.x),g5=vec3(gx1.y,gy1.y,gz1.y),\\n\\tg6=vec3(gx1.z,gy1.z,gz1.z),g7=vec3(gx1.w,gy1.w,gz1.w);\\n\\tvec4 norm0=taylorInvSqrt(vec4(dot(g0,g0),dot(g2,g2),dot(g1,g1),dot(g3,g3))),\\n\\tnorm1=taylorInvSqrt(vec4(dot(g4,g4),dot(g6,g6),dot(g5,g5),dot(g7,g7)));\\n\\tg0*=norm0.x;g2*=norm0.y;g1*=norm0.z;g3*=norm0.w;\\n\\tg4*=norm1.x;g6*=norm1.y;g5*=norm1.z;g7*=norm1.w;\\n\\tvec4 nz=mix(vec4(dot(g0,vec3(f0.x,f0.y,f0.z)),dot(g1,vec3(f1.x,f0.y,f0.z)),\\n\\tdot(g2,vec3(f0.x,f1.y,f0.z)),dot(g3,vec3(f1.x,f1.y,f0.z))),\\n\\tvec4(dot(g4,vec3(f0.x,f0.y,f1.z)),dot(g5,vec3(f1.x,f0.y,f1.z)),\\n\\tdot(g6,vec3(f0.x,f1.y,f1.z)),dot(g7,vec3(f1.x,f1.y,f1.z))),f.z);\\n\\treturn 2.2*mix(mix(nz.x,nz.z,f.y),mix(nz.y,nz.w,f.y),f.x);\\n}\\n\\nvoid main()\\n{\\n\\t// Normalized pixel coordinates (from 0 to 1) and center pos\\n\\tvec2 uv=vTextureCoord;\\n\\tuv = uv -.5;\\n\\n\\tfloat c=0.;\\n\\t// BUILD A FRACTAL TEXTURE USING\\n\\t// NOISE THAT ANIMATES THROUGH Z\\n\\tfloat x=uv.x+uTime*.2;\\n\\tfloat y=uv.y;\\n\\n\\tfor(int n=1;n<=5;n++){\\n\\t\\tfloat z=float(n);\\n\\t\\tvec3 p=vec3(x,y,z+.05*uTime);\\n\\t\\tfloat frequency=pow(2.,z);\\n\\t\\tc+=(noise(frequency*p)/frequency);\\n\\t}\\n\\t\\n\\n\\t// CLOUDS SHOT WITH COLOR\\n\\tvec3 sky=vec3(.1,.3,.9);\\n\\tvec3 white=vec3(1.0, 1.0, 1.0);\\n\\tvec3 pink=vec3(0.8549, 0.7569, 0.7569);\\n\\tvec3 cloud=mix(pink,white,c);\\n\\tc=clamp(c+y,0.,1.);\\n\\tvec3 color=mix(sky,cloud,c);\\n\\t\\n\\t// Output to screen\\n\\tgl_FragColor=vec4(sqrt(color),1.);\\n\\n}\";\n\n/**\n * @author lilieming\n * original shader :https://www.shadertoy.com/view/Wl2XWR by @lilieming\n */\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-weather-cloud}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta = 0] time for animation\n */\n\nvar AmoyWeatherCloudFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyWeatherCloudFilter(delta) {\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyWeatherCloudFilter.__proto__ = Filter;\n    AmoyWeatherCloudFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyWeatherCloudFilter.prototype.constructor = AmoyWeatherCloudFilter;\n\n    var prototypeAccessors = { delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyWeatherCloudFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyWeatherCloudFilter.prototype, prototypeAccessors );\n\n    return AmoyWeatherCloudFilter;\n}(Filter));\n\nexport { AmoyWeatherCloudFilter };\n//# sourceMappingURL=filter-weather-cloud.esm.js.map\n","/*!\n * @amoy/filter-inner-outline - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-inner-outline is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\nuniform sampler2D uSampler;// 2d texture\\nuniform vec4 filterArea;\\n\\nuniform float uTime;\\nuniform vec3 uColor;\\n\\nfloat rand(vec2 n){\\n\\treturn fract(sin(dot(n,vec2(12.9898,12.1414)))*83758.5453);\\n}\\n\\nfloat noise(vec2 n){\\n\\tconst vec2 d=vec2(0.,1.);\\n\\tvec2 b=floor(n);\\n\\tvec2 f=mix(vec2(0.),vec2(1.),fract(n));\\n\\treturn mix(mix(rand(b),rand(b+d.yx),f.x),mix(rand(b+d.xy),rand(b+d.yy),f.x),f.y);\\n}\\n\\nvec3 ramp(float t){\\n\\treturn t<=.5?vec3(1.-t*1.4,.2,1.05)/t:vec3(.3*(1.-t)*2.,.2,1.05)/t;\\n}\\n\\nfloat fire(vec2 n){\\n\\treturn noise(n)+noise(n*2.1)*.6+noise(n*5.4)*.42;\\n}\\n\\nvec3 getLine(vec3 col,vec2 fc,mat2 mtx,float shift){\\n\\tfloat t=uTime;\\n\\tvec2 uv=(fc/filterArea.xy)*mtx;\\n\\t\\n\\tuv.x+=uv.y<.5?23.+t*.35:-11.+t*.3;\\n\\tuv.y=abs(uv.y-shift);\\n\\tuv*=5.;\\n\\t\\n\\tfloat q=fire(uv-t*.013)/2.;\\n\\tvec2 r=vec2(fire(uv+q/2.+t-uv.x-uv.y),fire(uv+q-t));\\n\\tvec3 color=vec3(1./(pow(vec3(.5,0.,.1)+1.61,vec3(4.))));\\n\\t\\n\\tfloat grad=pow((r.y+r.y)*max(.0,uv.y)+.1,4.);\\n\\tcolor=ramp(grad);\\n\\tcolor/=(1.50+max(vec3(0),color));\\n\\t\\n\\tif(color.b<.00000005)\\n\\tcolor=vec3(.0);\\n\\t\\n\\treturn mix(col,color,color.b);\\n}\\n\\nvoid main(){\\n\\tvec2 fragCoord=vTextureCoord.xy*filterArea.xy;\\n\\tvec2 uv=fragCoord/filterArea.xy;\\n\\tvec3 color=vec3(0.);\\n\\tcolor=getLine(color,fragCoord,mat2(1.,1.,0.,1.),1.02);\\n\\tcolor=getLine(color,fragCoord,mat2(1.,1.,1.,0.),1.02);\\n\\tcolor=getLine(color,fragCoord,mat2(1.,1.,0.,1.),-.02);\\n\\tcolor=getLine(color,fragCoord,mat2(1.,1.,1.,0.),-.02);\\n\\tgl_FragColor=vec4(vec3(color.b)*uColor,1.)+texture2D(uSampler,vTextureCoord);\\n}\";\n\n/**\n * The AmoyInnerOutlineFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyInnerOutlineFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-gameboy-style}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {Object} [color={r:1.0, g:0, b:0}] outline color\n * @param {number} [delta=0.0] time for shader animation\n */\n\nvar AmoyInnerOutlineFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyInnerOutlineFilter(color, delta) {\n        if ( color === void 0 ) color={r:1.0, g:0, b:0};\n        if ( delta === void 0 ) delta = 0.0;\n\n        Filter.call(this, vertex, fragment);\n        this.uniforms.uColor  = new Float32Array(3);\n        this._color = {r:color.r, g:color.g, b:color.b};\n        this.delta = delta;\n    }\n\n    if ( Filter ) AmoyInnerOutlineFilter.__proto__ = Filter;\n    AmoyInnerOutlineFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyInnerOutlineFilter.prototype.constructor = AmoyInnerOutlineFilter;\n\n    var prototypeAccessors = { color: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyInnerOutlineFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uColor[0] = this._color.r;\n        this.uniforms.uColor[1] = this._color.g;\n        this.uniforms.uColor[2] = this._color.b;\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n\n    prototypeAccessors.color.get = function (){\n        return this._color;\n    };\n\n    prototypeAccessors.color.set = function (value) {\n        this._color = value;\n        this.uniforms.uColor[0] = value.r;\n        this.uniforms.uColor[1] = value.g;\n        this.uniforms.uColor[2] = value.b;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyInnerOutlineFilter.prototype, prototypeAccessors );\n\n    return AmoyInnerOutlineFilter;\n}(Filter));\n\nexport { AmoyInnerOutlineFilter };\n//# sourceMappingURL=filter-inner-outline.esm.js.map\n","/*!\n * @amoy/filter-fluid - v3.0.30\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-fluid is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar isMobile = createCommonjsModule(function (module) {\n(function(global) {\n  var apple_phone = /iPhone/i,\n    apple_ipod = /iPod/i,\n    apple_tablet = /iPad/i,\n    android_phone = /\\bAndroid(?:.+)Mobile\\b/i, // Match 'Android' AND 'Mobile'\n    android_tablet = /Android/i,\n    amazon_phone = /\\bAndroid(?:.+)SD4930UR\\b/i,\n    amazon_tablet = /\\bAndroid(?:.+)(?:KF[A-Z]{2,4})\\b/i,\n    windows_phone = /Windows Phone/i,\n    windows_tablet = /\\bWindows(?:.+)ARM\\b/i, // Match 'Windows' AND 'ARM'\n    other_blackberry = /BlackBerry/i,\n    other_blackberry_10 = /BB10/i,\n    other_opera = /Opera Mini/i,\n    other_chrome = /\\b(CriOS|Chrome)(?:.+)Mobile/i,\n    other_firefox = /Mobile(?:.+)Firefox\\b/i; // Match 'Mobile' AND 'Firefox'\n\n  function match(regex, userAgent) {\n    return regex.test(userAgent);\n  }\n\n  function isMobile(userAgent) {\n    var ua =\n      userAgent ||\n      (typeof navigator !== 'undefined' ? navigator.userAgent : '');\n\n    // Facebook mobile app's integrated browser adds a bunch of strings that\n    // match everything. Strip it out if it exists.\n    var tmp = ua.split('[FBAN');\n    if (typeof tmp[1] !== 'undefined') {\n      ua = tmp[0];\n    }\n\n    // Twitter mobile app's integrated browser on iPad adds a \"Twitter for\n    // iPhone\" string. Same probably happens on other tablet platforms.\n    // This will confuse detection so strip it out if it exists.\n    tmp = ua.split('Twitter');\n    if (typeof tmp[1] !== 'undefined') {\n      ua = tmp[0];\n    }\n\n    var result = {\n      apple: {\n        phone: match(apple_phone, ua) && !match(windows_phone, ua),\n        ipod: match(apple_ipod, ua),\n        tablet:\n          !match(apple_phone, ua) &&\n          match(apple_tablet, ua) &&\n          !match(windows_phone, ua),\n        device:\n          (match(apple_phone, ua) ||\n            match(apple_ipod, ua) ||\n            match(apple_tablet, ua)) &&\n          !match(windows_phone, ua)\n      },\n      amazon: {\n        phone: match(amazon_phone, ua),\n        tablet: !match(amazon_phone, ua) && match(amazon_tablet, ua),\n        device: match(amazon_phone, ua) || match(amazon_tablet, ua)\n      },\n      android: {\n        phone:\n          (!match(windows_phone, ua) && match(amazon_phone, ua)) ||\n          (!match(windows_phone, ua) && match(android_phone, ua)),\n        tablet:\n          !match(windows_phone, ua) &&\n          !match(amazon_phone, ua) &&\n          !match(android_phone, ua) &&\n          (match(amazon_tablet, ua) || match(android_tablet, ua)),\n        device:\n          (!match(windows_phone, ua) &&\n            (match(amazon_phone, ua) ||\n              match(amazon_tablet, ua) ||\n              match(android_phone, ua) ||\n              match(android_tablet, ua))) ||\n          match(/\\bokhttp\\b/i, ua)\n      },\n      windows: {\n        phone: match(windows_phone, ua),\n        tablet: match(windows_tablet, ua),\n        device: match(windows_phone, ua) || match(windows_tablet, ua)\n      },\n      other: {\n        blackberry: match(other_blackberry, ua),\n        blackberry10: match(other_blackberry_10, ua),\n        opera: match(other_opera, ua),\n        firefox: match(other_firefox, ua),\n        chrome: match(other_chrome, ua),\n        device:\n          match(other_blackberry, ua) ||\n          match(other_blackberry_10, ua) ||\n          match(other_opera, ua) ||\n          match(other_firefox, ua) ||\n          match(other_chrome, ua)\n      }\n    };\n    (result.any =\n      result.apple.device ||\n      result.android.device ||\n      result.windows.device ||\n      result.other.device),\n      // excludes 'other' devices and ipods, targeting touchscreen phones\n      (result.phone =\n        result.apple.phone || result.android.phone || result.windows.phone),\n      (result.tablet =\n        result.apple.tablet || result.android.tablet || result.windows.tablet);\n\n    return result;\n  }\n\n  if (\n    \n    module.exports &&\n    typeof window === 'undefined'\n  ) {\n    // Node.js\n    module.exports = isMobile;\n  } else if (\n    \n    module.exports &&\n    typeof window !== 'undefined'\n  ) {\n    // Browserify\n    module.exports = isMobile();\n    module.exports.isMobile = isMobile;\n  } else {\n    global.isMobile = isMobile();\n  }\n})(commonjsGlobal);\n});\nvar isMobile_1 = isMobile.isMobile;\n\n/*!\n * @pixi/settings - v5.1.3\n * Compiled Mon, 09 Sep 2019 04:51:53 UTC\n *\n * @pixi/settings is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n\n/**\n * The maximum recommended texture units to use.\n * In theory the bigger the better, and for desktop we'll use as many as we can.\n * But some mobile devices slow down if there is to many branches in the shader.\n * So in practice there seems to be a sweet spot size that varies depending on the device.\n *\n * In v4, all mobile devices were limited to 4 texture units because for this.\n * In v5, we allow all texture units to be used on modern Apple or Android devices.\n *\n * @private\n * @param {number} max\n * @returns {number}\n */\nfunction maxRecommendedTextures(max)\n{\n    var allowMax = true;\n\n    if (isMobile.tablet || isMobile.phone)\n    {\n        allowMax = false;\n\n        if (isMobile.apple.device)\n        {\n            var match = (navigator.userAgent).match(/OS (\\d+)_(\\d+)?/);\n\n            if (match)\n            {\n                var majorVersion = parseInt(match[1], 10);\n\n                // All texture units can be used on devices that support ios 11 or above\n                if (majorVersion >= 11)\n                {\n                    allowMax = true;\n                }\n            }\n        }\n        if (isMobile.android.device)\n        {\n            var match$1 = (navigator.userAgent).match(/Android\\s([0-9.]*)/);\n\n            if (match$1)\n            {\n                var majorVersion$1 = parseInt(match$1[1], 10);\n\n                // All texture units can be used on devices that support Android 7 (Nougat) or above\n                if (majorVersion$1 >= 7)\n                {\n                    allowMax = true;\n                }\n            }\n        }\n    }\n\n    return allowMax ? max : 4;\n}\n\n/**\n * Uploading the same buffer multiple times in a single frame can cause performance issues.\n * Apparent on iOS so only check for that at the moment\n * This check may become more complex if this issue pops up elsewhere.\n *\n * @private\n * @returns {boolean}\n */\nfunction canUploadSameBuffer()\n{\n    return !isMobile.apple.device;\n}\n\n/**\n * User's customizable globals for overriding the default PIXI settings, such\n * as a renderer's default resolution, framerate, float precision, etc.\n * @example\n * // Use the native window resolution as the default resolution\n * // will support high-density displays when rendering\n * PIXI.settings.RESOLUTION = window.devicePixelRatio;\n *\n * // Disable interpolation when scaling, will make texture be pixelated\n * PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n * @namespace PIXI.settings\n */\nvar settings = {\n\n    /**\n     * If set to true WebGL will attempt make textures mimpaped by default.\n     * Mipmapping will only succeed if the base texture uploaded has power of two dimensions.\n     *\n     * @static\n     * @name MIPMAP_TEXTURES\n     * @memberof PIXI.settings\n     * @type {PIXI.MIPMAP_MODES}\n     * @default PIXI.MIPMAP_MODES.POW2\n     */\n    MIPMAP_TEXTURES: 1,\n\n    /**\n     * Default anisotropic filtering level of textures.\n     * Usually from 0 to 16\n     *\n     * @static\n     * @name ANISOTROPIC_LEVEL\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 0\n     */\n    ANISOTROPIC_LEVEL: 0,\n\n    /**\n     * Default resolution / device pixel ratio of the renderer.\n     *\n     * @static\n     * @name RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    RESOLUTION: 1,\n\n    /**\n     * Default filter resolution.\n     *\n     * @static\n     * @name FILTER_RESOLUTION\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 1\n     */\n    FILTER_RESOLUTION: 1,\n\n    /**\n     * The maximum textures that this device supports.\n     *\n     * @static\n     * @name SPRITE_MAX_TEXTURES\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 32\n     */\n    SPRITE_MAX_TEXTURES: maxRecommendedTextures(32),\n\n    // TODO: maybe change to SPRITE.BATCH_SIZE: 2000\n    // TODO: maybe add PARTICLE.BATCH_SIZE: 15000\n\n    /**\n     * The default sprite batch size.\n     *\n     * The default aims to balance desktop and mobile devices.\n     *\n     * @static\n     * @name SPRITE_BATCH_SIZE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 4096\n     */\n    SPRITE_BATCH_SIZE: 4096,\n\n    /**\n     * The default render options if none are supplied to {@link PIXI.Renderer}\n     * or {@link PIXI.CanvasRenderer}.\n     *\n     * @static\n     * @name RENDER_OPTIONS\n     * @memberof PIXI.settings\n     * @type {object}\n     * @property {HTMLCanvasElement} view=null\n     * @property {number} resolution=1\n     * @property {boolean} antialias=false\n     * @property {boolean} forceFXAA=false\n     * @property {boolean} autoDensity=false\n     * @property {boolean} transparent=false\n     * @property {number} backgroundColor=0x000000\n     * @property {boolean} clearBeforeRender=true\n     * @property {boolean} preserveDrawingBuffer=false\n     * @property {number} width=800\n     * @property {number} height=600\n     * @property {boolean} legacy=false\n     */\n    RENDER_OPTIONS: {\n        view: null,\n        antialias: false,\n        forceFXAA: false,\n        autoDensity: false,\n        transparent: false,\n        backgroundColor: 0x000000,\n        clearBeforeRender: true,\n        preserveDrawingBuffer: false,\n        width: 800,\n        height: 600,\n        legacy: false,\n    },\n\n    /**\n     * Default Garbage Collection mode.\n     *\n     * @static\n     * @name GC_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.GC_MODES}\n     * @default PIXI.GC_MODES.AUTO\n     */\n    GC_MODE: 0,\n\n    /**\n     * Default Garbage Collection max idle.\n     *\n     * @static\n     * @name GC_MAX_IDLE\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 3600\n     */\n    GC_MAX_IDLE: 60 * 60,\n\n    /**\n     * Default Garbage Collection maximum check count.\n     *\n     * @static\n     * @name GC_MAX_CHECK_COUNT\n     * @memberof PIXI.settings\n     * @type {number}\n     * @default 600\n     */\n    GC_MAX_CHECK_COUNT: 60 * 10,\n\n    /**\n     * Default wrap modes that are supported by pixi.\n     *\n     * @static\n     * @name WRAP_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.WRAP_MODES}\n     * @default PIXI.WRAP_MODES.CLAMP\n     */\n    WRAP_MODE: 33071,\n\n    /**\n     * Default scale mode for textures.\n     *\n     * @static\n     * @name SCALE_MODE\n     * @memberof PIXI.settings\n     * @type {PIXI.SCALE_MODES}\n     * @default PIXI.SCALE_MODES.LINEAR\n     */\n    SCALE_MODE: 1,\n\n    /**\n     * Default specify float precision in vertex shader.\n     *\n     * @static\n     * @name PRECISION_VERTEX\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.HIGH\n     */\n    PRECISION_VERTEX: 'highp',\n\n    /**\n     * Default specify float precision in fragment shader.\n     * iOS is best set at highp due to https://github.com/pixijs/pixi.js/issues/3742\n     *\n     * @static\n     * @name PRECISION_FRAGMENT\n     * @memberof PIXI.settings\n     * @type {PIXI.PRECISION}\n     * @default PIXI.PRECISION.MEDIUM\n     */\n    PRECISION_FRAGMENT: isMobile.apple.device ? 'highp' : 'mediump',\n\n    /**\n     * Can we upload the same buffer in a single frame?\n     *\n     * @static\n     * @name CAN_UPLOAD_SAME_BUFFER\n     * @memberof PIXI.settings\n     * @type {boolean}\n     */\n    CAN_UPLOAD_SAME_BUFFER: canUploadSameBuffer(),\n\n    /**\n     * Enables bitmap creation before image load. This feature is experimental.\n     *\n     * @static\n     * @name CREATE_IMAGE_BITMAP\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    CREATE_IMAGE_BITMAP: false,\n\n    /**\n     * If true PixiJS will Math.floor() x/y values when rendering, stopping pixel interpolation.\n     * Advantages can include sharper image quality (like text) and faster rendering on canvas.\n     * The main disadvantage is movement of objects may appear less smooth.\n     *\n     * @static\n     * @constant\n     * @memberof PIXI.settings\n     * @type {boolean}\n     * @default false\n     */\n    ROUND_PIXELS: false,\n};\n\n/**\n * The NTFluidFilter applies a Fluid effect to an object.<br>\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-fluid}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @param {number} [strength=15] - the strength of blur\n */\nvar AmoyFluidFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyFluidFilter(strength) {\n        Filter.call(this);\n        this._blurFilter = new PIXI.filters.BlurFilter(strength || 15);\n        this._colFilter = new PIXI.filters.ColorMatrixFilter();\n\n        //use this matrix to change alpha value\n        this._colFilter.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 100, -12];\n        this.resolution = settings.RESOLUTION;\n\n        this.padding = Math.abs(this._blurFilter.blur) * 2;\n    }\n\n    if ( Filter ) AmoyFluidFilter.__proto__ = Filter;\n    AmoyFluidFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyFluidFilter.prototype.constructor = AmoyFluidFilter;\n\n    var prototypeAccessors = { resolution: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyFluidFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        var renderTarget = filterManager.getFilterTexture();\n        var renderTarget1 = filterManager.getFilterTexture();\n\n        this._blurFilter.apply(filterManager, input, renderTarget, true);\n        this._colFilter.apply(filterManager, renderTarget, renderTarget1, true);\n\n        filterManager.applyFilter(this, renderTarget1, output, clear);\n\n        filterManager.returnFilterTexture(renderTarget1);\n        filterManager.returnFilterTexture(renderTarget);\n    };\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    prototypeAccessors.resolution.get = function () {\n        return this._resolution;\n    };\n\n    prototypeAccessors.resolution.set = function (value) {\n        this._resolution = value;\n\n        if (this._colFilter) {\n            this._colFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    };\n\n    Object.defineProperties( AmoyFluidFilter.prototype, prototypeAccessors );\n\n    return AmoyFluidFilter;\n}(Filter));\n\nexport { AmoyFluidFilter };\n//# sourceMappingURL=filter-fluid.esm.js.map\n","/*!\n * @amoy/filter-blood-splash - v3.0.25\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-blood-splash is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nuniform float uPosx;\\nuniform float uPosy;\\nuniform float uTime;\\nuniform vec3 uColor;\\n\\n#define SEED 0.12345679\\n#define GRAV vec2(0.,-.26)\\n#define SIZE 0.024\\n#define DIE_TIME 0.9\\n#define PARTICLE_COUNT 120.0\\n#define PI 3.14159265359\\n\\nfloat rand (vec2 p) {\\n    return fract(sin(dot(p.xy,vec2(6.8245,7.1248)))*9.1283);\\n}\\n\\nfloat particle(vec2 uv, float identifier, vec2 anchor, vec2 velocity, float creationTime) {\\n    float particleTime = max(0., uTime - creationTime);\\n\\n    float size = max(0., DIE_TIME - particleTime) * SIZE;\\n\\n    vec2 velocityOffset = velocity * particleTime;\\n    vec2 gravityOffset = GRAV * pow(particleTime, 1.798);\\n    \\n    vec2 point = anchor + velocityOffset + gravityOffset;\\n    \\n    float dist = distance(uv, point);\\n    float hit = smoothstep(size, 0., dist);\\n    \\n    return hit;\\n}\\n\\nvec3 currentColor() {\\n    float c = uTime * 0.2;\\n    float r = sin(c * PI) / 2. + .5;\\n    float g = sin((c + .6) * PI) / 2. + .5;\\n    float b = sin((c + 1.2) * PI) / 2. + .5;\\n    return vec3(r, g, b);\\n}\\n\\nvoid main( )\\n{\\n    vec2 uv = vTextureCoord;\\n    vec3 col = vec3(0.);\\n\\n    \\n    for (float i = 0.0; i < PARTICLE_COUNT; i++) {\\n        float seed = SEED + floor(i / PARTICLE_COUNT + uTime);\\n\\n        vec2 anchor = vec2(uPosx/filterArea.x, uPosy/filterArea.y);\\n\\n        vec2 velocity = vec2(mix(-.5, .5, rand(vec2(seed, i))), mix(-.5, .5, rand(vec2(i, seed) / 3.)));\\n\\n        float creationTime = uTime - fract(i / PARTICLE_COUNT + uTime);\\n\\n      col += particle(uv, 0., anchor, velocity, creationTime) * uColor;\\n    }\\n\\n    col = smoothstep(.6, .9, col);\\n\\n    vec4 tc = texture2D(uSampler, vTextureCoord);\\n    gl_FragColor = vec4(col, col.r)*col.r + tc*(1.0 -col.r);\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-blood-splash}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n */\n\nvar AmoyBloodSplashFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyBloodSplashFilter(posx, posy, delta, color) {\n        if ( posx === void 0 ) posx = 10.0;\n        if ( posy === void 0 ) posy = 10.0;\n        if ( delta === void 0 ) delta=0.;\n        if ( color === void 0 ) color={r:1.0, g:0, b:0};\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.delta = delta;\n        this.uniforms.uColor  = new Float32Array(3);\n        this._color = {r:color.r, g:color.g, b:color.b};\n\n    }\n\n    if ( Filter ) AmoyBloodSplashFilter.__proto__ = Filter;\n    AmoyBloodSplashFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyBloodSplashFilter.prototype.constructor = AmoyBloodSplashFilter;\n\n    var prototypeAccessors = { posx: { configurable: true },color: { configurable: true },delta: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyBloodSplashFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        this.uniforms.uColor[0] = this._color.r;\n        this.uniforms.uColor[1] = this._color.g;\n        this.uniforms.uColor[2] = this._color.b;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * filter area point x\n     * @member {number}\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     *  the color of blood\n     * @member {object}\n     */\n    prototypeAccessors.color.get = function (){\n        return this._color;\n    };\n\n    prototypeAccessors.color.set = function (value) {\n        this._color = value;\n        this.uniforms.uColor[0] = value.r;\n        this.uniforms.uColor[1] = value.g;\n        this.uniforms.uColor[2] = value.b;\n    };\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    prototypeAccessors.delta.get = function () {\n        return this.uniforms.uTime;\n    };\n\n    prototypeAccessors.delta.set = function (value) {\n        this.uniforms.uTime = value;\n    };\n\n    Object.defineProperties( AmoyBloodSplashFilter.prototype, prototypeAccessors );\n\n    return AmoyBloodSplashFilter;\n}(Filter));\n\nexport { AmoyBloodSplashFilter };\n//# sourceMappingURL=filter-blood-splash.esm.js.map\n","/*!\n * @amoy/filter-magnify - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-magnify is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nuniform float uPosx;\\nuniform float uPosy;\\n\\nuniform float uMagnification;\\nuniform float uLensRadius;\\n\\n\\nconst float border_thickness = 0.01;\\n\\nvoid main( )\\n{   \\n    //Convert to UV coordinates, accounting for aspect ratio\\n    vec2 uv = vTextureCoord;\\n    float aspect = filterArea.x / filterArea.y;\\n    uv.x = uv.x * aspect;\\n\\n    float lens_radius = uLensRadius / filterArea.y;\\n    float magnification = uMagnification;\\n    \\n    //at the beginning of the sketch, center the magnifying glass.\\n    //Thanks to FabriceNeyret2 for the suggestion\\n    vec2 mouse = vec2(uPosx, uPosy);\\n    if (mouse == vec2(0.0)) {\\n        mouse = filterArea.xy / 2.0;\\n    }\\n    \\n    //UV coordinates of mouse\\n    vec2 mouse_uv = mouse / filterArea.y;\\n    \\n    //Distance to mouse\\n    float mouse_dist = distance(uv, mouse_uv);\\n    \\n    //Draw the texture\\n\\tgl_FragColor = texture2D(uSampler, vTextureCoord);\\n    \\n    //Draw the outline of the glass\\n    if (mouse_dist < lens_radius + border_thickness) {\\n        gl_FragColor = vec4(0.1, 0.1, 0.1, 1.0);\\n    }\\n    \\n    //Draw a zoomed-in version of the texture\\n    if (mouse_dist < lens_radius) {\\n        uv.x = uv.x / aspect;\\n        mouse_uv.x = mouse_uv.x / aspect;\\n        \\n        gl_FragColor = texture2D(uSampler, mouse_uv + (uv - mouse_uv) / magnification);\\n    }    \\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-magnify}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n * @param {number} [magnification=2.0] magnification\n * @param {number} [lensRadius=10.0] lensRadius\n */\n\nvar AmoyMagnifyFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyMagnifyFilter(posx, posy, magnification, lensRadius) {\n        if ( posx === void 0 ) posx = 10.0;\n        if ( posy === void 0 ) posy = 10.0;\n        if ( magnification === void 0 ) magnification=2.0;\n        if ( lensRadius === void 0 ) lensRadius=50.;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.magnification = magnification;\n        this.lensRadius = lensRadius;\n    }\n\n    if ( Filter ) AmoyMagnifyFilter.__proto__ = Filter;\n    AmoyMagnifyFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyMagnifyFilter.prototype.constructor = AmoyMagnifyFilter;\n\n    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true },magnification: { configurable: true },lensRadius: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyMagnifyFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uMagnification =  this.magnification;\n        this.uniforms.uLensRadius =  this.lensRadius;\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * center x pos of lens circle\n     */\n    prototypeAccessors.posx.get = function () {\n        return this.uniforms.uPosx;\n    };\n\n    prototypeAccessors.posx.set = function (value) {\n        this.uniforms.uPosx = value;\n    };\n\n    /**\n     * center y pos of lens circle\n     */\n    prototypeAccessors.posy.get = function () {\n        return this.uniforms.uPosy;\n    };\n\n    prototypeAccessors.posy.set = function (value) {\n        this.uniforms.uPosy = value;\n    };\n\n    prototypeAccessors.magnification.get = function () {\n        return this.uniforms.uMagnification;\n    };\n\n    prototypeAccessors.magnification.set = function (value) {\n        this.uniforms.uMagnification = value;\n    };\n\n    prototypeAccessors.lensRadius.get = function () {\n        return this.uniforms.uLensRadius;\n    };\n\n    prototypeAccessors.lensRadius.set = function (value) {\n        this.uniforms.uLensRadius = value;\n    };\n\n    Object.defineProperties( AmoyMagnifyFilter.prototype, prototypeAccessors );\n\n    return AmoyMagnifyFilter;\n}(Filter));\n\nexport { AmoyMagnifyFilter };\n//# sourceMappingURL=filter-magnify.esm.js.map\n","/*!\n * @amoy/filter-fisheye - v3.0.24\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-fisheye is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nconst float PI = 3.1415926535;\\n\\nvoid main(void)\\n{\\n    float aperture = 178.0;\\n    float apertureHalf = 0.5 * aperture * (PI / 180.0);\\n    float maxFactor = sin(apertureHalf);\\n    \\n    vec2 uv;\\n    vec2 xy = 2.0 * vTextureCoord.xy - 1.0;\\n    float d = length(xy);\\n    if (d < (2.0-maxFactor))\\n    {\\n        d = length(xy * maxFactor);\\n        float z = sqrt(1.0 - d * d);\\n        float r = atan(d, z) / PI;\\n        float phi = atan(xy.y, xy.x);\\n        \\n        uv.x = r * cos(phi) + 0.5;\\n        uv.y = r * sin(phi) + 0.5;\\n    }\\n    else\\n    {\\n        uv = vTextureCoord.xy;\\n    }\\n    vec4 c = texture2D(uSampler, uv);\\n\\n    gl_FragColor= c;\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-fisheye}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyFishEyeFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyFishEyeFilter() {\n        Filter.call(this, vertex, fragment);\n\n    }\n\n    if ( Filter ) AmoyFishEyeFilter.__proto__ = Filter;\n    AmoyFishEyeFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyFishEyeFilter.prototype.constructor = AmoyFishEyeFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyFishEyeFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyFishEyeFilter;\n}(Filter));\n\nexport { AmoyFishEyeFilter };\n//# sourceMappingURL=filter-fisheye.esm.js.map\n","/*!\n * @amoy/filter-barrel-distortion - v3.0.25\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-barrel-distortion is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nuniform float uBarrelPower;\\n\\nvec2 Distort(vec2 p)\\n{\\n    float theta=atan(p.y,p.x);\\n    float radius=length(p);\\n    radius=pow(radius,uBarrelPower);\\n    p.x=radius*cos(theta);\\n    p.y=radius*sin(theta);\\n    return .5*(p+1.);\\n}\\n\\nvoid main()\\n{\\n    vec2 xy=2.*vTextureCoord.xy-1.;\\n    vec2 uv;\\n    float d=length(xy);\\n    if(d<1.)\\n    {\\n        uv=Distort(xy);\\n    }\\n    else\\n    {\\n        uv=vTextureCoord.xy;\\n    }\\n    vec4 c=texture2D(uSampler,uv);\\n    gl_FragColor=c;\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-barreldistortion}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyBarrelDistortionFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyBarrelDistortionFilter(barrelPower) {\n        if ( barrelPower === void 0 ) barrelPower=2.0;\n\n        Filter.call(this, vertex, fragment);\n        this.barrelPower = barrelPower;\n    }\n\n    if ( Filter ) AmoyBarrelDistortionFilter.__proto__ = Filter;\n    AmoyBarrelDistortionFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyBarrelDistortionFilter.prototype.constructor = AmoyBarrelDistortionFilter;\n\n    var prototypeAccessors = { barrelPower: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyBarrelDistortionFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uBarrelPower = this.barrelPower;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     * barrelPower , the strength of distortion\n     * @member {number}\n     */\n    prototypeAccessors.barrelPower.get = function () {\n        return this.uniforms.uBarrelPower;\n    };\n\n    prototypeAccessors.barrelPower.set = function (value) {\n        this.uniforms.uBarrelPower = value;\n    };\n\n    Object.defineProperties( AmoyBarrelDistortionFilter.prototype, prototypeAccessors );\n\n    return AmoyBarrelDistortionFilter;\n}(Filter));\n\nexport { AmoyBarrelDistortionFilter };\n//# sourceMappingURL=filter-barrel-distortion.esm.js.map\n","/*!\n * @amoy/filter-clear-background - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-clear-background is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nuniform vec3 uColor;\\nuniform float uOffset;\\n\\n\\nvec3 rgb2hsl(vec3 rgb)\\n{\\n    float h;\\n    float s;\\n    float l;\\n\\n    float maxval = max(rgb.r , max(rgb.g, rgb.b));\\n    float minval = min(rgb.r, min(rgb.g, rgb.b));\\n    float delta = maxval - minval;\\n \\n    l = (minval + maxval) / 2.0;\\n    s = 0.0;\\n    if (l > 0.0 && l < 1.0)\\n        s = delta / (l < 0.5 ? 2.0 * l : 2.0 - 2.0 * l);\\n    h = 0.0;\\n    if (delta > 0.0)\\n    {\\n        if (rgb.r == maxval && rgb.g != maxval)\\n            h += (rgb.g - rgb.b ) / delta;\\n        if (rgb.g == maxval && rgb.b != maxval)\\n            h += 2.0  + (rgb.b - rgb.r) / delta;\\n        if (rgb.b == maxval && rgb.r != maxval)\\n            h += 4.0 + (rgb.r - rgb.g) / delta;\\n        h *= 60.0;\\n    }\\n\\n    return vec3(h,s,l);\\n}\\n\\n\\nvoid main( )\\n{\\n    vec2 uv = vTextureCoord;\\n    vec4 c = texture2D(uSampler, vTextureCoord);\\n\\n    vec3 hsl;\\n    hsl = rgb2hsl(c.rgb);\\n\\n    vec3 hsl1;\\n    hsl1 = rgb2hsl(uColor);\\n\\n    float a = 1.;\\n    if(abs(hsl.x - hsl1.x) < uOffset &&(abs(hsl.y - hsl1.y) < uOffset) && (abs(hsl.z - hsl1.z) < uOffset)){\\n        a = 0.0;\\n    }\\n\\n    c *= a;\\n    gl_FragColor = c;\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-clear-background}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {object} [{r:1.0, g:0, b:0}] default color for clear\n * @param {number} [offset=5.0] the color offset range [0, 20]\n */\n\nvar AmoyClearBackgroundFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyClearBackgroundFilter(color, offset) {\n        if ( color === void 0 ) color={r:1.0, g:0, b:0};\n        if ( offset === void 0 ) offset=5.;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.uniforms.uColor  = new Float32Array(3);\n        this.offset = offset;\n        this._color = {r:color.r, g:color.g, b:color.b};\n    }\n\n    if ( Filter ) AmoyClearBackgroundFilter.__proto__ = Filter;\n    AmoyClearBackgroundFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyClearBackgroundFilter.prototype.constructor = AmoyClearBackgroundFilter;\n\n    var prototypeAccessors = { color: { configurable: true },offset: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyClearBackgroundFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        this.uniforms.uColor[0] = this._color.r;\n        this.uniforms.uColor[1] = this._color.g;\n        this.uniforms.uColor[2] = this._color.b;\n        this.uniforms.uOffset = this.offset;\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    /**\n     *  the color is need to be removed\n     * @member {object}\n     */\n    prototypeAccessors.color.get = function (){\n        return this._color;\n    };\n\n    prototypeAccessors.color.set = function (value) {\n        this._color = value;\n        this.uniforms.uColor[0] = value.r;\n        this.uniforms.uColor[1] = value.g;\n        this.uniforms.uColor[2] = value.b;\n    };\n\n    prototypeAccessors.offset.get = function (){\n        return this.uniforms.uOffset;\n    };\n\n    prototypeAccessors.offset.set = function (value) {\n        this.uniforms.uOffset = value;\n    };\n\n    Object.defineProperties( AmoyClearBackgroundFilter.prototype, prototypeAccessors );\n\n    return AmoyClearBackgroundFilter;\n}(Filter));\n\nexport { AmoyClearBackgroundFilter };\n//# sourceMappingURL=filter-clear-background.esm.js.map\n","/*!\n * @amoy/filter-pencil-draw - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-pencil-draw is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\n#define PI2 6.28318530717959\\n\\n#define RANGE 16.\\n#define STEP 2.\\n#define ANGLENUM 4.\\n\\n#define MAGIC_GRAD_THRESH .01\\n\\n//#define MAGIC_COLOR 1.\\n\\n#define MAGIC_SENSITIVITY     10.\\n// #define MAGIC_COLOR           0.5\\nuniform float uColorThreshold;\\n\\n\\nvec4 getCol(vec2 pos)\\n{\\n        vec2 uv = pos/filterArea.xy;\\n        return texture2D(uSampler, uv);\\n}\\n\\nfloat getVal(vec2 pos)\\n{\\n        vec4 c=getCol(pos);\\n        return dot(c.xyz, vec3(0.2126, 0.7152, 0.0722));\\n}\\n\\nvec2 getGrad(vec2 pos, float eps)\\n{\\n        vec2 d=vec2(eps,0);\\n        return vec2(\\n                getVal(pos+d.xy)-getVal(pos-d.xy),\\n                getVal(pos+d.yx)-getVal(pos-d.yx)\\n        )/eps/2.;\\n}\\n\\nvec2 pR(vec2 p, float a) {\\n        return cos(a)*p + sin(a)*vec2(p.y, -p.x);\\n}\\n\\nfloat absCircular(float t)\\n{\\n        float a = floor(t + 0.5);\\n        return mod(abs(a - t), 1.0);\\n}\\n\\nvoid main(void)\\n{\\n    vec2 fragCoord=vTextureCoord.xy*filterArea.xy;\\n    vec2 pos=fragCoord;\\n    float weight=1.;\\n    for (float j = 0.; j < ANGLENUM; j += 1.)\\n    {\\n            vec2 dir = vec2(1, 0);\\n            dir = pR(dir, j * PI2 / (2. * ANGLENUM));\\n        \\n            vec2 grad = vec2(-dir.y, dir.x);\\n        \\n            for (float i = -RANGE; i <= RANGE; i += STEP)\\n            {\\n                    vec2 pos2 = pos + normalize(dir)*i;\\n            \\n                    \\n                    if (pos2.y < 0. || pos2.x < 0. || pos2.x > filterArea.x || pos2.y > filterArea.y)\\n                    continue;\\n            \\n                    vec2 g = getGrad(pos2, 1.);\\n                    if (length(g) < MAGIC_GRAD_THRESH)\\n                    continue;\\n            \\n                    weight -= pow(abs(dot(normalize(grad), normalize(g))), MAGIC_SENSITIVITY) / floor((2. * RANGE + 1.) / STEP) / ANGLENUM;\\n            }\\n    }\\n    \\n    #ifndef GRAYSCALE\\n    vec4 col = getCol(pos);\\n    #else\\n    vec4 col = vec4(getVal(pos));\\n    #endif\\n    \\n    vec4 background = mix(col, vec4(1.), uColorThreshold);\\n    \\n    float r=length(pos-filterArea.xy*.5)/filterArea.x;\\n    float vign=1.-r*r*r;\\n    \\n    vec4 a=texture2D(uSampler,pos/filterArea.xy);\\n    \\n    gl_FragColor=vign*mix(vec4(0),background,weight)+a.xxxx/25.;\\n    \\n}\\n\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-pencil-draw}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyPencilDrawFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyPencilDrawFilter(colorThreshold) {\n        if ( colorThreshold === void 0 ) colorThreshold=0.5;\n\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.colorThreshold = colorThreshold;\n\n    }\n\n    if ( Filter ) AmoyPencilDrawFilter.__proto__ = Filter;\n    AmoyPencilDrawFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyPencilDrawFilter.prototype.constructor = AmoyPencilDrawFilter;\n\n    var prototypeAccessors = { colorThreshold: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyPencilDrawFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    prototypeAccessors.colorThreshold.get = function (){\n        return this.uniforms.uColorThreshold;\n    };\n\n    prototypeAccessors.colorThreshold.set = function (value){\n        this.uniforms.uColorThreshold =value;\n    };\n\n    Object.defineProperties( AmoyPencilDrawFilter.prototype, prototypeAccessors );\n\n    return AmoyPencilDrawFilter;\n}(Filter));\n\nexport { AmoyPencilDrawFilter };\n//# sourceMappingURL=filter-pencil-draw.esm.js.map\n","/*!\n * @amoy/filter-photo-sepia-toning - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-photo-sepia-toning is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\nvoid main(void)\\n{\\n    vec2 uv=vTextureCoord;\\n    vec3 col=texture2D(uSampler,uv).bgr;\\n    float y=.3*col.r+.59*col.g+.11*col.b;\\n    gl_FragColor=vec4(y+.15,y+.07,y-.12,1.);\\n    \\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-photo-sepia-toning}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyPhotoSepiaToningFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyPhotoSepiaToningFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n    }\n\n    if ( Filter ) AmoyPhotoSepiaToningFilter.__proto__ = Filter;\n    AmoyPhotoSepiaToningFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyPhotoSepiaToningFilter.prototype.constructor = AmoyPhotoSepiaToningFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyPhotoSepiaToningFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyPhotoSepiaToningFilter;\n}(Filter));\n\nexport { AmoyPhotoSepiaToningFilter };\n//# sourceMappingURL=filter-photo-sepia-toning.esm.js.map\n","/*!\n * @amoy/filter-warhol - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-warhol is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\n\\nvoid main(void)\\n{\\n    vec3 col = texture2D(uSampler, vTextureCoord).bgr;\\n    float y = 0.3 *col.r + 0.59 * col.g + 0.11 * col.b;\\n    y = y < 0.3 ? 0.0 : (y < 0.6 ? 0.5 : 1.0);\\n    if (y == 0.5)\\n        col = vec3(0.8, 0.0, 0.0);\\n    else if (y == 1.0)\\n        col = vec3(0.9, 0.9, 0.0);\\n    else\\n        col = vec3(0.0, 0.0, 0.0);\\n        \\n    gl_FragColor.a = 1.0;\\n    gl_FragColor.rgb = col;\\n\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-Warhol}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n */\n\nvar AmoyWarholFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyWarholFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n    }\n\n    if ( Filter ) AmoyWarholFilter.__proto__ = Filter;\n    AmoyWarholFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyWarholFilter.prototype.constructor = AmoyWarholFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyWarholFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyWarholFilter;\n}(Filter));\n\nexport { AmoyWarholFilter };\n//# sourceMappingURL=filter-warhol.esm.js.map\n","/*!\n * @amoy/filter-vignette - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-vignette is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader \\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\n\\n\\nvoid main(void)\\n{\\n    vec3 col = texture2D(uSampler, vTextureCoord).bgr;\\n    vec2 p = vTextureCoord;\\n    float cr = pow(0.1, 2.0);\\n    float pt = pow(p.x - 0.5, 2.0) + pow(p.y - 0.5, 2.0);\\n    float d = pt - cr;\\n    float cf = 1.0;\\n    if (d > 0.0)\\n        cf = 1.0 - 2.0 * d;\\n    gl_FragColor.a = 1.0;\\n    gl_FragColor.rgb = cf * col;\\n\\n}\";\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-vignette}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyVignetteFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyVignetteFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n    }\n\n    if ( Filter ) AmoyVignetteFilter.__proto__ = Filter;\n    AmoyVignetteFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyVignetteFilter.prototype.constructor = AmoyVignetteFilter;\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyVignetteFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    return AmoyVignetteFilter;\n}(Filter));\n\nexport { AmoyVignetteFilter };\n//# sourceMappingURL=filter-vignette.esm.js.map\n","/*!\n * @amoy/filter-colorblind - v3.0.29\n * Compiled Wed, 04 Dec 2019 07:31:38 UTC\n *\n * @amoy/filter-colorblind is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Filter } from '@pixi/core';\n\nvar vertex = \"attribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 projectionMatrix;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n    vTextureCoord = aTextureCoord;\\n}\";\n\nvar fragment = \"varying vec2 vTextureCoord;//passed from vect shader\\n\\nuniform vec4 filterArea;\\nuniform sampler2D uSampler;// 2d texture\\nuniform float m[20];\\n\\nfloat fu(float n){\\n    return(n<0.?0.:(n<1.?n:1.));\\n}\\n\\nvec4 colorMatrix(vec4 o){\\n    float r=((o.r*m[0])+(o.g*m[1])+(o.b*m[2])+(o.a*m[3])+m[4]);\\n    float g=((o.r*m[5])+(o.g*m[6])+(o.b*m[7])+(o.a*m[8])+m[9]);\\n    float b=((o.r*m[10])+(o.g*m[11])+(o.b*m[12])+(o.a*m[13])+m[14]);\\n    float a=((o.r*m[15])+(o.g*m[16])+(o.b*m[17])+(o.a*m[18])+m[19]);\\n    \\n    return vec4(fu(r),fu(g),fu(b),fu(a));\\n    \\n}\\n\\nvoid main(void)\\n{\\n    vec4 col=texture2D(uSampler,vTextureCoord);\\n    \\n    gl_FragColor=colorMatrix(col);\\n    \\n}\";\n\nvar AMOY_CLORBLINDE_TYPE_ENUM = {\n    Protanopia:1,\n    Protanomaly:2,\n    Deuteranopia:3,\n    Deuteranomaly:4,\n    Tritanopia:5,\n    Tritanomaly:6,\n    Achromatopsia:7,\n    Achromatomaly:8\n};\n\nvar Protanopia = [0.567,0.433,0,0,0, 0.558,0.442,0,0,0, 0,0.242,0.758,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Protanomaly= [0.817,0.183,0,0,0, 0.333,0.667,0,0,0, 0,0.125,0.875,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Deuteranopia= [0.625,0.375,0,0,0, 0.7,0.3,0,0,0, 0,0.3,0.7,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Deuteranomaly = [0.8,0.2,0,0,0, 0.258,0.742,0,0,0, 0,0.142,0.858,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Tritanopia = [0.95,0.05,0,0,0, 0,0.433,0.567,0,0, 0,0.475,0.525,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Tritanomaly = [0.967,0.033,0,0,0, 0,0.733,0.267,0,0, 0,0.183,0.817,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Achromatopsia = [0.299,0.587,0.114,0,0, 0.299,0.587,0.114,0,0, 0.299,0.587,0.114,0,0, 0,0,0,1,0, 0,0,0,0,1];\n\nvar Achromatomaly = [0.618,0.320,0.062,0,0, 0.163,0.775,0.062,0,0, 0.163,0.320,0.516,0,0,0,0,0,1,0,0,0,0,0];\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-Warhol}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n */\n\nvar AmoyColorblindFilter = /*@__PURE__*/(function (Filter) {\n    function AmoyColorblindFilter() {\n        Filter.call(this, vertex, fragment);\n        // sub class\n        this.blindType = AMOY_CLORBLINDE_TYPE_ENUM.Protanopia;\n    }\n\n    if ( Filter ) AmoyColorblindFilter.__proto__ = Filter;\n    AmoyColorblindFilter.prototype = Object.create( Filter && Filter.prototype );\n    AmoyColorblindFilter.prototype.constructor = AmoyColorblindFilter;\n\n    var prototypeAccessors = { blindType: { configurable: true } };\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    AmoyColorblindFilter.prototype.apply = function apply (filterManager, input, output, clear) {\n        filterManager.applyFilter(this, input, output, clear);\n    };\n\n    prototypeAccessors.blindType.set = function (value){\n        this._blindType = value;\n        switch(this._blindType) {\n            case AMOY_CLORBLINDE_TYPE_ENUM.Protanopia:{\n                this.uniforms.m = Protanopia;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Protanomaly:{\n                this.uniforms.m = Protanomaly;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Tritanopia:{\n                this.uniforms.m = Tritanopia;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Tritanomaly:{\n                this.uniforms.m = Tritanomaly;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Deuteranopia:{\n                this.uniforms.m = Deuteranopia;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Deuteranomaly:{\n                this.uniforms.m = Deuteranomaly;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Achromatopsia:{\n                this.uniforms.m = Achromatopsia;\n                break;\n            }\n            case AMOY_CLORBLINDE_TYPE_ENUM.Achromatomaly:{\n                this.uniforms.m = Achromatomaly;\n                break;\n            }\n        }\n    };\n\n    prototypeAccessors.blindType.get = function (){\n        return this._blindType;\n    };\n\n    Object.defineProperties( AmoyColorblindFilter.prototype, prototypeAccessors );\n\n    return AmoyColorblindFilter;\n}(Filter));\n\nexport { AMOY_CLORBLINDE_TYPE_ENUM, AmoyColorblindFilter };\n//# sourceMappingURL=filter-colorblind.esm.js.map\n"],"names":["vertex","fragment","AmoyRainfallFilter","Filter","rainR","delta","call","this","__proto__","prototype","Object","create","constructor","prototypeAccessors","configurable","apply","filterManager","input","output","clear","uniforms","uRainR","uTime","applyFilter","get","set","value","defineProperties","AmoyMosaicFilter","tileSize","dimensions","Float32Array","uTileSize","filterFrame","width","height","testFrag","AmoyPixelVibrationFilter","intensity","blursize","testVert","threshold","uIntensity","uBlursize","uThreshold","Math","min","max","AmoyLight2dFilter","posx","posy","uPosx","uPosy","AmoyLensHaloFilter","AmoyBrokenCamDistortionFilter","AmoyPageCurlFilter","startPosx","startPosy","nextPageTexture","radius","flipMode","_size","_sliceSize","_slicePixelSize","_sliceInnerSize","_flipMode","_scaleMode","uRadius","uFlipmode","uStartPosx","uStartPosy","uFlipMode","_nextPageTexture","Texture","from","baseTexture","scaleMode","mipmap","updateNextPageTexture","texture","_updateID","emit","destroy","destroyBase","AmoySparksDriftingFilter","strength","uWidth","uHeight","uStrength","AmoyWhiteBlackSketchFilter","invertColor","_invertColor","uInvertColor","AmoyVcrFilter","AmoyFlameFilter","AmoyGameboyStyleFilter","AmoySnowFilter","blizard","_blizard","uBlizard","AmoyLightSweepFilter","AmoyReflectionFilter","AmoyWaterReflectionFilter","boundary","AmoyWeatherRainyFilter","AmoyWeatherCloudFilter","AmoyInnerOutlineFilter","color","r","g","b","uColor","_color","commonjsGlobal","globalThis","window","global","self","module","isMobile","apple_phone","apple_ipod","apple_tablet","android_phone","android_tablet","amazon_phone","amazon_tablet","windows_phone","windows_tablet","other_blackberry","other_blackberry_10","other_opera","other_chrome","other_firefox","match","regex","userAgent","test","ua","navigator","tmp","split","result","apple","phone","ipod","tablet","device","amazon","android","windows","other","blackberry","blackberry10","opera","firefox","chrome","any","exports","fn","settings","MIPMAP_TEXTURES","ANISOTROPIC_LEVEL","RESOLUTION","FILTER_RESOLUTION","SPRITE_MAX_TEXTURES","allowMax","parseInt","match$1","maxRecommendedTextures","SPRITE_BATCH_SIZE","RENDER_OPTIONS","view","antialias","forceFXAA","autoDensity","transparent","backgroundColor","clearBeforeRender","preserveDrawingBuffer","legacy","GC_MODE","GC_MAX_IDLE","GC_MAX_CHECK_COUNT","WRAP_MODE","SCALE_MODE","PRECISION_VERTEX","PRECISION_FRAGMENT","CAN_UPLOAD_SAME_BUFFER","CREATE_IMAGE_BITMAP","ROUND_PIXELS","AmoyFluidFilter","_blurFilter","PIXI","filters","BlurFilter","_colFilter","ColorMatrixFilter","matrix","resolution","padding","abs","blur","renderTarget","getFilterTexture","renderTarget1","returnFilterTexture","_resolution","AmoyBloodSplashFilter","AmoyMagnifyFilter","magnification","lensRadius","uMagnification","uLensRadius","AmoyFishEyeFilter","AmoyBarrelDistortionFilter","barrelPower","uBarrelPower","AmoyClearBackgroundFilter","offset","uOffset","AmoyPencilDrawFilter","colorThreshold","uColorThreshold","AmoyPhotoSepiaToningFilter","AmoyWarholFilter","AmoyVignetteFilter","AMOY_CLORBLINDE_TYPE_ENUM","Protanopia","Protanomaly","Deuteranopia","Deuteranomaly","Tritanopia","Tritanomaly","Achromatopsia","Achromatomaly","AmoyColorblindFilter","blindType","_blindType","m"],"mappings":"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"}