/*!
 * @amoy/filter-flame - v3.0.24
 * Compiled Wed, 27 Nov 2019 03:13:09 UTC
 *
 * @amoy/filter-flame is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter } from '@pixi/core';

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader \n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uPosx;\nuniform float uPosy;\nuniform float uStrength;\nuniform float uTime;\n//////////////////////\n// Fire Flame shader\n\n// procedural noise from IQ\nvec2 hash(vec2 p)\n{\n\tp=vec2(dot(p,vec2(127.1,311.7)),dot(p,vec2(269.5,183.3)));\n\treturn-1.+2.*fract(sin(p)*43758.5453123);\n}\n\nfloat noise(in vec2 p)\n{\n\tconst float K1=.366025404;// (sqrt(3)-1)/2;\n\tconst float K2=.211324865;// (3-sqrt(3))/6;\n\t\n\tvec2 i=floor(p+(p.x+p.y)*K1);\n\t\n\tvec2 a=p-i+(i.x+i.y)*K2;\n\tvec2 o=(a.x>a.y)?vec2(1.,0.):vec2(0.,1.);\n\tvec2 b=a-o+K2;\n\tvec2 c=a-1.+2.*K2;\n\t\n\tvec3 h=max(.5-vec3(dot(a,a),dot(b,b),dot(c,c)),0.);\n\t\n\tvec3 n=h*h*h*h*vec3(dot(a,hash(i+0.)),dot(b,hash(i+o)),dot(c,hash(i+1.)));\n\t\n\treturn dot(n,vec3(70.));\n}\n\nfloat fbm(vec2 uv)\n{\n\tfloat f;\n\tmat2 m=mat2(1.6,1.2,-1.2,1.6);\n\tf=.5000*noise(uv);uv=m*uv;\n\tf+=.2500*noise(uv);uv=m*uv;\n\tf+=.1250*noise(uv);uv=m*uv;\n\tf+=.0625*noise(uv);uv=m*uv;\n\tf=.5+.5*f;\n\treturn f;\n}\n\nvoid main()\n{\n\tvec2 uv=vTextureCoord;\n\tvec2 q=uv;\n\tq.y = 1.0 - q.y;\n\tfloat strength=uStrength;\n\tfloat T3=max(3.,1.25*strength)*uTime;\n\tq.x-=uPosx/filterArea.x;\n\tq.y-=uPosy/filterArea.y;\n\tfloat n=fbm(strength*q-vec2(0,T3));\n\tfloat c=1.-26.*pow(max(0.,length(q*vec2(1.8+q.y*1.5,.75))-n*max(0.,q.y+.25)),1.2);\n\tfloat c1=n*c*(1.5-pow(1.50*(1.0 - uv.y),1.2));\n\tc1=clamp(c1,0.,1.);\n\t\n\tvec3 col=vec3(1.5*c1,1.5*c1*c1*c1,c1*c1*c1*c1*c1*c1);\n\t\n\tfloat a=c*(1.-pow(uv.y,3.));\n\tgl_FragColor=vec4(mix(vec3(0.),col,a),1.)+texture2D(uSampler,vTextureCoord);\n}";

/**
 *
 *  * The AmoyFlameFilter applies the effect to an object.<br>
 * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyFlameFilter.gif)
 *
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-flame}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 * @param {number} [posx=10.0] flame center x position in pic
 * @param {number} [posy=10.0] flame center y position in pic
 * @param {number} [strength=2.0] strength of flame
 * @param {number} [delta=0] - For animating interlaced lines
 */

var AmoyFlameFilter = /*@__PURE__*/(function (Filter) {
    function AmoyFlameFilter(posx, posy, strength, delta) {
        if ( posx === void 0 ) posx = 10.0;
        if ( posy === void 0 ) posy = 10.0;
        if ( strength === void 0 ) strength = 2.;
        if ( delta === void 0 ) delta = 0.0;

        Filter.call(this, vertex, fragment);
        // sub class
        this.posx = posx;
        this.posy = posy;
        this.strength = strength;
        this.delta = delta;
    }

    if ( Filter ) AmoyFlameFilter.__proto__ = Filter;
    AmoyFlameFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyFlameFilter.prototype.constructor = AmoyFlameFilter;

    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true },strength: { configurable: true },delta: { configurable: true } };

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyFlameFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;
        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;
        this.uniforms.uStrength = this.strength;
        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;
        filterManager.applyFilter(this, input, output, clear);
    };

    /**
     * current x
     */
    prototypeAccessors.posx.get = function () {
        return this.uniforms.uPosx;
    };

    prototypeAccessors.posx.set = function (value) {
        this.uniforms.uPosx = value;
    };

    /**
     * current y
     */
    prototypeAccessors.posy.get = function () {
        return this.uniforms.uPosy;
    };

    prototypeAccessors.posy.set = function (value) {
        this.uniforms.uPosy = value;
    };

    /**
     * flame strength
     */
    prototypeAccessors.strength.get = function () {
        return this.uniforms.uStrength;
    };

    prototypeAccessors.strength.set = function (value) {
        this.uniforms.uStrength = value;
    };


    /**
     * time for animation
     *
     * @member {number}
     * @default 0.0
     */
    prototypeAccessors.delta.get = function () {
        return this.uniforms.uTime;
    };

    prototypeAccessors.delta.set = function (value) {
        this.uniforms.uTime = value;
    };

    Object.defineProperties( AmoyFlameFilter.prototype, prototypeAccessors );

    return AmoyFlameFilter;
}(Filter));

export { AmoyFlameFilter };
//# sourceMappingURL=filter-flame.esm.js.map
