/*!
 * @amoy/filter-mosaic - v3.0.24
 * Compiled Tue, 03 Dec 2019 15:39:17 UTC
 *
 * @amoy/filter-mosaic is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(e,i){"use strict";var t="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",r="varying vec2 vTextureCoord;//passed from vect shader\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\nuniform float uTileSize;\n\nvoid main(void)\n{\n    \n    vec2 uv=vTextureCoord;\n    if(filterArea.y<filterArea.x){\n        uv.y*=filterArea.y/filterArea.x;\n    }else{\n        uv.x*=filterArea.x/filterArea.y;\n    }\n    \n    uv=uv*uTileSize;\n    \n    uv=floor(uv);\n    \n    uv=uv/uTileSize;\n    \n    vec4 tex=texture2D(uSampler,uv);\n    \n    gl_FragColor=tex;\n}\n",n=function(e){function i(i){void 0===i&&(i=32),e.call(this,t,r),this.uniforms.dimensions=new Float32Array(2),this.tileSize=i}e&&(i.__proto__=e),i.prototype=Object.create(e&&e.prototype),i.prototype.constructor=i;var n={tileSize:{configurable:!0}};return i.prototype.apply=function(e,i,t,r){this.uniforms.uTileSize=this.tileSize<=0?32:this.tileSize,this.uniforms.dimensions[0]=i.filterFrame.width,this.uniforms.dimensions[1]=i.filterFrame.height,e.applyFilter(this,i,t,r)},n.tileSize.get=function(){return this.uniforms.uTileSize},n.tileSize.set=function(e){(e<0||e>64)&&(e=32),this.uniforms.uTileSize=e},Object.defineProperties(i.prototype,n),i}(i.Filter);return e.AmoyMosaicFilter=n,e}({},PIXI);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-mosaic.js.map
