/*!
 * @amoy/filter-vignette - v3.0.24
 * Compiled Tue, 03 Dec 2019 15:39:17 UTC
 *
 * @amoy/filter-vignette is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter } from '@pixi/core';

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\n\nvoid main(void)\n{\n    vec3 col = texture2D(uSampler, vTextureCoord).bgr;\n    vec2 p = vTextureCoord;\n    float cr = pow(0.1, 2.0);\n    float pt = pow(p.x - 0.5, 2.0) + pow(p.y - 0.5, 2.0);\n    float d = pt - cr;\n    float cf = 1.0;\n    if (d > 0.0)\n        cf = 1.0 - 2.0 * d;\n    gl_FragColor.a = 1.0;\n    gl_FragColor.rgb = cf * col;\n\n}";

/**
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-vignette}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 */

var AmoyVignetteFilter = /*@__PURE__*/(function (Filter) {
    function AmoyVignetteFilter() {
        Filter.call(this, vertex, fragment);
        // sub class
    }

    if ( Filter ) AmoyVignetteFilter.__proto__ = Filter;
    AmoyVignetteFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyVignetteFilter.prototype.constructor = AmoyVignetteFilter;

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyVignetteFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        filterManager.applyFilter(this, input, output, clear);
    };

    return AmoyVignetteFilter;
}(Filter));

export { AmoyVignetteFilter };
//# sourceMappingURL=filter-vignette.esm.js.map
