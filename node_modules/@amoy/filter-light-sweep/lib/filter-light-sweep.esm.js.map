{"version":3,"file":"filter-light-sweep.esm.js","sources":["../src/LightSweepFilter.js"],"sourcesContent":["import vertex from '../../default.vert';\nimport fragment from './lightsweep.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * The AmoyLightSweepFilter applies the effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyLightSweepFilter.gif)\n *\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-light-sweep}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta=0] time for shader animation\n */\n\nclass AmoyLightSweepFilter extends Filter{\n    constructor(delta = 0.0) {\n        super(vertex, fragment);\n        this.delta = delta;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    get delta() {\n        return this.uniforms.uTime;\n    }\n\n    set delta(value) {\n        this.uniforms.uTime = value;\n    }\n}\n\nexport { AmoyLightSweepFilter };"],"names":["super"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM;iCACS,CAAC,KAAW,EAAE;qCAAR,GAAG;;QAChBA,WAAK,OAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;;;;;+DACtB;;;;;;mCAMD,wBAAM,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;QACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;QACzD,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;MACzD;;;;;;;IAOD,mBAAI,wBAAQ;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC9B;;IAED,mBAAI,sBAAM,KAAK,EAAE;QACb,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;KAC/B;;;;;EA1B8B;;;;"}