/*!
 * @amoy/filter-light-sweep - v3.0.21
 * Compiled Thu, 21 Nov 2019 07:47:39 UTC
 *
 * @amoy/filter-light-sweep is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@pixi/core');

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\n\nvoid main()\n{\n\t\n\tvec2 uv=vTextureCoord;\n\tuv.x *=.5;\n\tfloat col=sin(uv.y+uv.x*3.-uTime*6.)*.9;\n\tcol*=col*col*.6;\n\n\tcol= clamp(col,0.,1.);\n\t\n\tvec4 tex=texture2D(uSampler,vTextureCoord);\n\tif(tex.a < .005){\n\t\tdiscard;\n\t}\n\tgl_FragColor=tex+vec4(col,col,col,tex.a);\n}";

/**
 * The AmoyLightSweepFilter applies the effect to an object.<br>
 * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/AmoyLightSweepFilter.gif)
 *
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-light-sweep}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 * @param {number} [delta=0] time for shader animation
 */

var AmoyLightSweepFilter = /*@__PURE__*/(function (Filter) {
    function AmoyLightSweepFilter(delta) {
        if ( delta === void 0 ) delta = 0.0;

        Filter.call(this, vertex, fragment);
        this.delta = delta;
    }

    if ( Filter ) AmoyLightSweepFilter.__proto__ = Filter;
    AmoyLightSweepFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyLightSweepFilter.prototype.constructor = AmoyLightSweepFilter;

    var prototypeAccessors = { delta: { configurable: true } };

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyLightSweepFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;
        filterManager.applyFilter(this, input, output, clear);
    };
    /**
     * time for animation
     *
     * @member {number}
     * @default 0.0
     */
    prototypeAccessors.delta.get = function () {
        return this.uniforms.uTime;
    };

    prototypeAccessors.delta.set = function (value) {
        this.uniforms.uTime = value;
    };

    Object.defineProperties( AmoyLightSweepFilter.prototype, prototypeAccessors );

    return AmoyLightSweepFilter;
}(core.Filter));

exports.AmoyLightSweepFilter = AmoyLightSweepFilter;
//# sourceMappingURL=filter-light-sweep.cjs.js.map
