/*!
 * @amoy/filter-light-sweep - v3.0.21
 * Compiled Thu, 21 Nov 2019 07:47:39 UTC
 *
 * @amoy/filter-light-sweep is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(t,e){"use strict";var o="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",r="varying vec2 vTextureCoord;//passed from vect shader\n\nuniform sampler2D uSampler;// 2d texture\nuniform vec4 filterArea;\n\nuniform float uTime;\n\nvoid main()\n{\n\t\n\tvec2 uv=vTextureCoord;\n\tuv.x *=.5;\n\tfloat col=sin(uv.y+uv.x*3.-uTime*6.)*.9;\n\tcol*=col*col*.6;\n\n\tcol= clamp(col,0.,1.);\n\t\n\tvec4 tex=texture2D(uSampler,vTextureCoord);\n\tif(tex.a < .005){\n\t\tdiscard;\n\t}\n\tgl_FragColor=tex+vec4(col,col,col,tex.a);\n}",n=function(t){function e(e){void 0===e&&(e=0),t.call(this,o,r),this.delta=e}t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e;var n={delta:{configurable:!0}};return e.prototype.apply=function(t,e,o,r){this.uniforms.uTime=this.delta<=0?2:this.delta,t.applyFilter(this,e,o,r)},n.delta.get=function(){return this.uniforms.uTime},n.delta.set=function(t){this.uniforms.uTime=t},Object.defineProperties(e.prototype,n),e}(e.Filter);return t.AmoyLightSweepFilter=n,t}({},PIXI);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-light-sweep.js.map
