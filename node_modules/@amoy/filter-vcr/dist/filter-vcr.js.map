{"version":3,"file":"filter-vcr.js","sources":["../src/VcrFilter.js"],"sourcesContent":["import vertex from '../../default.vert';\nimport fragment from './vcr.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-vcr}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [delta] time for shader animation\n */\n\nclass AmoyVcrFilter extends Filter{\n    constructor(delta = 0.0) {\n        super(vertex, fragment);\n        // sub class\n        this.delta = delta;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.uTime = this.delta <= 0 ? 2.0 : this.delta;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    get delta() {\n        return this.uniforms.uTime;\n    }\n\n    set delta(value) {\n        this.uniforms.uTime = value;\n    }\n}\n\nexport { AmoyVcrFilter };"],"names":["AmoyVcrFilter","delta","super","vertex","fragment","this","apply","filterManager","input","output","clear","uniforms","uTime","applyFilter","prototypeAccessors","value","Filter"],"mappings":";;;;;;;8kIAaMA,yBACUC,kBAAQ,GAChBC,YAAMC,EAAQC,GAEdC,KAAKJ,MAAQA,4IAOjBK,eAAMC,EAAeC,EAAOC,EAAQC,GAChCL,KAAKM,SAASC,MAAQP,KAAKJ,OAAS,EAAI,EAAMI,KAAKJ,MACnDM,EAAcM,YAAYR,KAAMG,EAAOC,EAAQC,IASnDI,EAAIb,qBACA,OAAOI,KAAKM,SAASC,OAGzBE,EAAIb,mBAAMc,GACNV,KAAKM,SAASC,MAAQG,6CA3BFC"}