{"version":3,"file":"filter-blood-splash.cjs.js","sources":["../src/BloodSplashFilter.js"],"sourcesContent":["import vertex from '../../default.vert';\nimport fragment from './blood-splash.frag';\nimport { Filter } from '@pixi/core';\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-blood-splash}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n */\n\nclass AmoyBloodSplashFilter extends Filter {\n    constructor(posx = 10.0, posy = 10.0, delta=0., color={r:1.0, g:0, b:0}) {\n        super(vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.delta = delta;\n        this.uniforms.uColor  = new Float32Array(3);\n        this._color = {r:color.r, g:color.g, b:color.b};\n\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        this.uniforms.uColor[0] = this._color.r;\n        this.uniforms.uColor[1] = this._color.g;\n        this.uniforms.uColor[2] = this._color.b;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * filter area point x\n     * @member {number}\n     */\n    get posx() {\n        return this.uniforms.uPosx;\n    }\n\n    set posx(value) {\n        this.uniforms.uPosx = value;\n    }\n\n    /**\n     *  the color of blood\n     * @member {object}\n     */\n    get color(){\n        return this._color;\n    }\n\n    set color(value) {\n        this._color = value;\n        this.uniforms.uColor[0] = value.r;\n        this.uniforms.uColor[1] = value.g;\n        this.uniforms.uColor[2] = value.b;\n    }\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    get delta() {\n        return this.uniforms.uTime;\n    }\n\n    set delta(value) {\n        this.uniforms.uTime = value;\n    }\n\n}\n\nexport { AmoyBloodSplashFilter };\n"],"names":["super","Filter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAM,qBAAqB;IACvB,8BAAW,CAAC,IAAW,EAAE,IAAW,EAAE,KAAQ,EAAE,KAAuB,EAAE;mCAAzD,GAAG;mCAAU,GAAG;qCAAW,CAAC;qCAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;QAClEA,WAAK,OAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;;QAExB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;;;;;0HAEnD;;;;;;oCAMD,wBAAM,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;QACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QACxC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;MACzD;;;;;;IAMD,mBAAI,uBAAO;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC9B;;IAED,mBAAI,qBAAK,KAAK,EAAE;QACZ,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;MAC/B;;;;;;IAMD,mBAAI,uBAAO;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;MACtB;;IAED,mBAAI,sBAAM,KAAK,EAAE;QACb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;MACrC;;;;;;;;IAQD,mBAAI,wBAAQ;QACR,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;MAC9B;;IAED,mBAAI,sBAAM,KAAK,EAAE;QACb,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;KAC/B;;;;;EAhE+BC;;;;"}