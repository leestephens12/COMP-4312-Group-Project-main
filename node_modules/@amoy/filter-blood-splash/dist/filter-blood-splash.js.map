{"version":3,"file":"filter-blood-splash.js","sources":["../src/BloodSplashFilter.js"],"sourcesContent":["import vertex from '../../default.vert';\nimport fragment from './blood-splash.frag';\nimport { Filter } from '@pixi/core';\n\n/**\n * @class\n * @see {@link https://www.npmjs.com/package/@amoy/filter-blood-splash}\n * @see {@link https://www.npmjs.com/package/@amoy/filters}\n * @extends PIXI.Filter\n * @memberof AMOY.filters\n * @param {number} [posx=10.0] light  x position\n * @param {number} [posy=10.0] light  y position\n */\n\nclass AmoyBloodSplashFilter extends Filter {\n    constructor(posx = 10.0, posy = 10.0, delta=0., color={r:1.0, g:0, b:0}) {\n        super(vertex, fragment);\n        // sub class\n        this.posx = posx;\n        this.posy = posy;\n        this.delta = delta;\n        this.uniforms.uColor  = new Float32Array(3);\n        this._color = {r:color.r, g:color.g, b:color.b};\n\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;\n        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;\n        this.uniforms.uColor[0] = this._color.r;\n        this.uniforms.uColor[1] = this._color.g;\n        this.uniforms.uColor[2] = this._color.b;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * filter area point x\n     * @member {number}\n     */\n    get posx() {\n        return this.uniforms.uPosx;\n    }\n\n    set posx(value) {\n        this.uniforms.uPosx = value;\n    }\n\n    /**\n     *  the color of blood\n     * @member {object}\n     */\n    get color(){\n        return this._color;\n    }\n\n    set color(value) {\n        this._color = value;\n        this.uniforms.uColor[0] = value.r;\n        this.uniforms.uColor[1] = value.g;\n        this.uniforms.uColor[2] = value.b;\n    }\n\n    /**\n     * time for animation\n     *\n     * @member {number}\n     * @default 0.0\n     */\n    get delta() {\n        return this.uniforms.uTime;\n    }\n\n    set delta(value) {\n        this.uniforms.uTime = value;\n    }\n\n}\n\nexport { AmoyBloodSplashFilter };\n"],"names":["AmoyBloodSplashFilter","posx","posy","delta","color","r","g","b","super","vertex","fragment","this","uniforms","uColor","Float32Array","_color","apply","filterManager","input","output","clear","uPosx","uPosy","applyFilter","prototypeAccessors","value","uTime","Filter"],"mappings":";;;;;;;opEAcMA,cACF,WAAYC,EAAaC,EAAaC,EAAUC,kBAA7B,mBAAa,mBAAY,kBAAU,CAACC,EAAE,EAAKC,EAAE,EAAGC,EAAE,IACjEC,YAAMC,EAAQC,GAEdC,KAAKV,KAAOA,EACZU,KAAKT,KAAOA,EACZS,KAAKR,MAAQA,EACbQ,KAAKC,SAASC,OAAU,IAAIC,aAAa,GACzCH,KAAKI,OAAS,CAACV,EAAED,EAAMC,EAAGC,EAAEF,EAAME,EAAGC,EAAEH,EAAMG,4LAQjDS,eAAMC,EAAeC,EAAOC,EAAQC,GAChCT,KAAKC,SAASS,MAAQV,KAAKV,MAAQ,EAAI,GAAOU,KAAKV,KACnDU,KAAKC,SAASU,MAAQX,KAAKT,MAAQ,EAAI,GAAOS,KAAKT,KACnDS,KAAKC,SAASC,OAAO,GAAKF,KAAKI,OAAOV,EACtCM,KAAKC,SAASC,OAAO,GAAKF,KAAKI,OAAOT,EACtCK,KAAKC,SAASC,OAAO,GAAKF,KAAKI,OAAOR,EACtCU,EAAcM,YAAYZ,KAAMO,EAAOC,EAAQC,IAOnDI,EAAIvB,oBACA,OAAOU,KAAKC,SAASS,OAGzBG,EAAIvB,kBAAKwB,GACLd,KAAKC,SAASS,MAAQI,GAO1BD,EAAIpB,qBACA,OAAOO,KAAKI,QAGhBS,EAAIpB,mBAAMqB,GACNd,KAAKI,OAASU,EACdd,KAAKC,SAASC,OAAO,GAAKY,EAAMpB,EAChCM,KAAKC,SAASC,OAAO,GAAKY,EAAMnB,EAChCK,KAAKC,SAASC,OAAO,GAAKY,EAAMlB,GASpCiB,EAAIrB,qBACA,OAAOQ,KAAKC,SAASc,OAGzBF,EAAIrB,mBAAMsB,GACNd,KAAKC,SAASc,MAAQD,6CA/DME"}