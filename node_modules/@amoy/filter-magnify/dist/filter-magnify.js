/*!
 * @amoy/filter-magnify - v3.0.23
 * Compiled Thu, 21 Nov 2019 07:47:39 UTC
 *
 * @amoy/filter-magnify is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(n,t){"use strict";var i="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",o="varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nuniform float uPosx;\nuniform float uPosy;\n\nuniform float uMagnification;\nuniform float uLensRadius;\n\n\nconst float border_thickness = 0.01;\n\nvoid main( )\n{   \n    //Convert to UV coordinates, accounting for aspect ratio\n    vec2 uv = vTextureCoord;\n    float aspect = filterArea.x / filterArea.y;\n    uv.x = uv.x * aspect;\n\n    float lens_radius = uLensRadius / filterArea.y;\n    float magnification = uMagnification;\n    \n    //at the beginning of the sketch, center the magnifying glass.\n    //Thanks to FabriceNeyret2 for the suggestion\n    vec2 mouse = vec2(uPosx, uPosy);\n    if (mouse == vec2(0.0)) {\n        mouse = filterArea.xy / 2.0;\n    }\n    \n    //UV coordinates of mouse\n    vec2 mouse_uv = mouse / filterArea.y;\n    \n    //Distance to mouse\n    float mouse_dist = distance(uv, mouse_uv);\n    \n    //Draw the texture\n\tgl_FragColor = texture2D(uSampler, vTextureCoord);\n    \n    //Draw the outline of the glass\n    if (mouse_dist < lens_radius + border_thickness) {\n        gl_FragColor = vec4(0.1, 0.1, 0.1, 1.0);\n    }\n    \n    //Draw a zoomed-in version of the texture\n    if (mouse_dist < lens_radius) {\n        uv.x = uv.x / aspect;\n        mouse_uv.x = mouse_uv.x / aspect;\n        \n        gl_FragColor = texture2D(uSampler, mouse_uv + (uv - mouse_uv) / magnification);\n    }    \n}",e=function(n){function t(t,e,s,r){void 0===t&&(t=10),void 0===e&&(e=10),void 0===s&&(s=2),void 0===r&&(r=50),n.call(this,i,o),this.posx=t,this.posy=e,this.magnification=s,this.lensRadius=r}n&&(t.__proto__=n),t.prototype=Object.create(n&&n.prototype),t.prototype.constructor=t;var e={posx:{configurable:!0},posy:{configurable:!0},magnification:{configurable:!0},lensRadius:{configurable:!0}};return t.prototype.apply=function(n,t,i,o){this.uniforms.uMagnification=this.magnification,this.uniforms.uLensRadius=this.lensRadius,this.uniforms.uPosx=this.posx<=0?10:this.posx,this.uniforms.uPosy=this.posy<=0?10:this.posy,n.applyFilter(this,t,i,o)},e.posx.get=function(){return this.uniforms.uPosx},e.posx.set=function(n){this.uniforms.uPosx=n},e.posy.get=function(){return this.uniforms.uPosy},e.posy.set=function(n){this.uniforms.uPosy=n},e.magnification.get=function(){return this.uniforms.uMagnification},e.magnification.set=function(n){this.uniforms.uMagnification=n},e.lensRadius.get=function(){return this.uniforms.uLensRadius},e.lensRadius.set=function(n){this.uniforms.uLensRadius=n},Object.defineProperties(t.prototype,e),t}(t.Filter);return n.AmoyMagnifyFilter=e,n}({},PIXI);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-magnify.js.map
