/*!
 * @amoy/filter-light2d - v3.0.21
 * Compiled Thu, 14 Nov 2019 08:59:20 UTC
 *
 * @amoy/filter-light2d is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter } from '@pixi/core';

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nuniform float uPosx;\nuniform float uPosy;\n\nvoid main(void)\n{\nvec2 uv=vTextureCoord;\n\nvec3 col=texture2D(uSampler,uv).xyz;\n\nvec2 fragCoord=vTextureCoord*filterArea.xy;\n\nfloat lightY=0.1*filterArea.y;\n\nvec3 lightPos=vec3(uPosx,lightY,uPosy);\n\nvec3 lightDir=lightPos-vec3(fragCoord.x,0.,fragCoord.y);\n\nfloat diffuse=max(dot(normalize(lightDir),vec3(0.,1.,0.)),0.);\n\ngl_FragColor=vec4(col,1.)*diffuse;\n\n}";

/**
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-light2d}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 * @param {number} [posx=10.0] light  x position
 * @param {number} [posy=10.0] light  y position
 */

var AmoyLight2dFilter = /*@__PURE__*/(function (Filter) {
    function AmoyLight2dFilter(posx, posy) {
        if ( posx === void 0 ) posx = 10.0;
        if ( posy === void 0 ) posy = 10.0;

        Filter.call(this, vertex, fragment);
        // sub class
        this.posx = posx;
        this.posy = posy;

    }

    if ( Filter ) AmoyLight2dFilter.__proto__ = Filter;
    AmoyLight2dFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyLight2dFilter.prototype.constructor = AmoyLight2dFilter;

    var prototypeAccessors = { posx: { configurable: true },posy: { configurable: true } };

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyLight2dFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        this.uniforms.uPosx = this.posx <= 0 ? 10.0 : this.posx;
        this.uniforms.uPosy = this.posy <= 0 ? 10.0 : this.posy;
        filterManager.applyFilter(this, input, output, clear);
    };

    /**
     * filter area point x
     */
    prototypeAccessors.posx.get = function () {
        return this.uniforms.uPosx;
    };

    prototypeAccessors.posx.set = function (value) {
        this.uniforms.uPosx = value;
    };

    /**
     * filter area point y
     */
    prototypeAccessors.posy.get = function () {
        return this.uniforms.uPosy;
    };

    prototypeAccessors.posy.set = function (value) {
        this.uniforms.uPosy = value;
    };

    Object.defineProperties( AmoyLight2dFilter.prototype, prototypeAccessors );

    return AmoyLight2dFilter;
}(Filter));

export { AmoyLight2dFilter };
//# sourceMappingURL=filter-light2d.esm.js.map
