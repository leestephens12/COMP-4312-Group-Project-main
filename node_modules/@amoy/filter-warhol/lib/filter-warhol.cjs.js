/*!
 * @amoy/filter-warhol - v3.0.24
 * Compiled Tue, 03 Dec 2019 15:39:17 UTC
 *
 * @amoy/filter-warhol is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@pixi/core');

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader \n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\n\nvoid main(void)\n{\n    vec3 col = texture2D(uSampler, vTextureCoord).bgr;\n    float y = 0.3 *col.r + 0.59 * col.g + 0.11 * col.b;\n    y = y < 0.3 ? 0.0 : (y < 0.6 ? 0.5 : 1.0);\n    if (y == 0.5)\n        col = vec3(0.8, 0.0, 0.0);\n    else if (y == 1.0)\n        col = vec3(0.9, 0.9, 0.0);\n    else\n        col = vec3(0.0, 0.0, 0.0);\n        \n    gl_FragColor.a = 1.0;\n    gl_FragColor.rgb = col;\n\n}";

/**
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-Warhol}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 * @param {number} [posx=10.0] light  x position
 * @param {number} [posy=10.0] light  y position
 */

var AmoyWarholFilter = /*@__PURE__*/(function (Filter) {
    function AmoyWarholFilter() {
        Filter.call(this, vertex, fragment);
        // sub class
    }

    if ( Filter ) AmoyWarholFilter.__proto__ = Filter;
    AmoyWarholFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyWarholFilter.prototype.constructor = AmoyWarholFilter;

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyWarholFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        filterManager.applyFilter(this, input, output, clear);
    };

    return AmoyWarholFilter;
}(core.Filter));

exports.AmoyWarholFilter = AmoyWarholFilter;
//# sourceMappingURL=filter-warhol.cjs.js.map
