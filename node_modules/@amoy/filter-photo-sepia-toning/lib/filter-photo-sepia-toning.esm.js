/*!
 * @amoy/filter-photo-sepia-toning - v3.0.24
 * Compiled Tue, 03 Dec 2019 15:39:17 UTC
 *
 * @amoy/filter-photo-sepia-toning is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
import { Filter } from '@pixi/core';

var vertex = "attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}";

var fragment = "varying vec2 vTextureCoord;//passed from vect shader\n\nuniform vec4 filterArea;\nuniform sampler2D uSampler;// 2d texture\n\nvoid main(void)\n{\n    vec2 uv=vTextureCoord;\n    vec3 col=texture2D(uSampler,uv).bgr;\n    float y=.3*col.r+.59*col.g+.11*col.b;\n    gl_FragColor=vec4(y+.15,y+.07,y-.12,1.);\n    \n}";

/**
 * @class
 * @see {@link https://www.npmjs.com/package/@amoy/filter-photo-sepia-toning}
 * @see {@link https://www.npmjs.com/package/@amoy/filters}
 * @extends PIXI.Filter
 * @memberof AMOY.filters
 */

var AmoyPhotoSepiaToningFilter = /*@__PURE__*/(function (Filter) {
    function AmoyPhotoSepiaToningFilter() {
        Filter.call(this, vertex, fragment);
        // sub class
    }

    if ( Filter ) AmoyPhotoSepiaToningFilter.__proto__ = Filter;
    AmoyPhotoSepiaToningFilter.prototype = Object.create( Filter && Filter.prototype );
    AmoyPhotoSepiaToningFilter.prototype.constructor = AmoyPhotoSepiaToningFilter;

    /**
     * Override existing apply method in PIXI.Filter
     * @private
     */
    AmoyPhotoSepiaToningFilter.prototype.apply = function apply (filterManager, input, output, clear) {
        filterManager.applyFilter(this, input, output, clear);
    };

    return AmoyPhotoSepiaToningFilter;
}(Filter));

export { AmoyPhotoSepiaToningFilter };
//# sourceMappingURL=filter-photo-sepia-toning.esm.js.map
